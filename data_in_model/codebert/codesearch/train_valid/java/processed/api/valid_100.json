{"0": ["Arrays . asList"], "1": ["buffer . append", "buffer . append", "TagExtensions . attributesToString", "attr . isPresent", "buffer . append", "attr . get", "buffer . append", "child . getPosition", "child . getPosition", "processingContent . substring", "processingContent . length", "buffer . append", "buffer . append", "child . getChild", "buffer . append", "buffer . append", "buffer . append", "buffer . append", "buffer . append", "buffer . append", "buffer . toString", "StringBuilder . new"], "2": ["stateMonitor . enter", "assignableVMs . setTaskAssigned", "logger . error", "e . getMessage", "IllegalStateException . new"], "3": ["cb . close"], "4": ["explicitChars . length", "explicitChars . charAt"], "5": ["mActiveIndexes . iterator", "iterator . hasNext", "iterator . next", "iterator . remove", "mActiveIndexes . isEmpty"], "6": ["values . isEmpty", "Doubles . toArray", "ImmutableDoubleArray . new"], "7": ["value . startsWith", "String . format", "value . substring", "value . length", "String . format", "value . length", "value . charAt", "value . charAt", "value . charAt", "value . length", "value . charAt", "value . charAt", "value . charAt", "value . charAt", "value . length", "Long . parseLong", "NumberFormatException . new", "NumberFormatException . new", "String . new", "String . new", "NumberFormatException . new"], "8": ["Str . add", "originatingRequest . id", "originatingRequest . returnAddress", "response . wasErrors", "response . body", "originatingRequest . getReceiver", "response . body", "metaDataProviderMap . get", "originatingRequest . address", "RequestMethod . valueOf", "originatingRequest . getMethod", "requestMetaData . getMethod", "serviceMethodMeta . getResponseCode", "response . headers", "requestMetaData . getRequest", "response . headers", "response . headers", "headers . putAllCopyLists", "requestMetaData . getRequest", "originatingRequest . getReceiver", "serviceMethodMeta . getContentType", "jsonMapper . toJson", "response . body", "MultiMapImpl . new"], "9": ["activity . getActivityBehavior", "userTaskActivityBehavior . getTaskDefinition", "logger . info", "logger . info", "userTaskActivityBehavior . getTaskDefinition", "ClassDelegate . new"], "11": ["f . exists", "f . isDirectory"], "12": ["ex . getResponse", "ex . getServerAddress", "CommandResult . new"], "13": ["xStream . setMode", "xStream . aliasSystemAttribute", "xStream . aliasSystemAttribute", "xStream . processAnnotations", "XStream . setupDefaultSecurity", "xStream . allowTypesByRegExp", "XStream . new"], "14": ["versionMetadataCache . get", "originatingStore . getKey", "metadataMap . isEmpty", "metadataMap . get", "metadataMap . remove", "affectedGroups . forEach", "versionMetadataCache . get", "group . getKey", "grpMetaMap . isEmpty", "grpMetaMap . remove"], "15": ["BetweenExpression . new"], "17": ["sharedObject . getLock", "lock . lock", "lock . unlock"], "18": ["srcImage . getWidth", "srcImage . getHeight", "srcImage . getType", "srcImage . getWidth", "srcImage . getHeight", "grayImage . setRGB", "Colors . getGray", "BufferedImage . new"], "19": ["connection . start", "connection . start", "JmsNotConnectedException . new", "JmsNotConnectedException . new"], "20": ["keyValueParameters . keySet", "paramsString . concat", "keyValueParameters . get", "URLEncoder . encode", "LOGGER . warn", "paramsString . concat"], "21": ["className . equals", "byteCodeFilter . accept", "log . isDebugEnabled", "log . debug", "log . isDebugEnabled", "log . debug", "Class . forName", "visitor . visit", "log . debug", "e . toString", "IllegalStateException . new"], "22": ["aBeautifier . getReplacementText", "LOGGER . isDebugEnabled", "LOGGER . debug"], "23": ["mInflater . inflate", "mHelper . getFriendlyNameOfField", "result . findViewById", "result . findViewById", "field . getChoiches", "spinner . setAdapter", "field . getChoiches", "spinner . setSelection", "spinner . setOnItemSelectedListener", "ArrayAdapter . new", "OnItemSelectedAdapter . new"], "24": ["fieldValue . setFieldName", "fieldValue . setTableName", "SqlUtils . tableName", "fieldValue . setValue", "rs . getObject", "fieldValue . setValueType", "Objects . isNull", "fieldValue . getValue", "fieldValue . getValue", "record . getFieldClusters", "fieldValue . getTableName", "record . getFieldClusters", "fieldValue . getTableName", "fieldCluster . getFields", "record . getFieldClusters", "fieldValue . getTableName", "ModifiedRecord . new", "FieldValue . new", "FieldCluster . new"], "25": ["problemFactCollectionMemberAccessorMap . isEmpty", "problemFactMemberAccessorMap . isEmpty", "IllegalStateException . new"], "26": ["TreeRangeSet . create", "copy . removeAll", "other . complement"], "27": ["objectMapper . readValue", "response . getBody", "RuntimeException . new"], "28": ["parentType . hasField", "node . getName", "parentType . getField", "node . getName", "parentType . hasInternalType", "node . getName", "parentType . getInternalType", "node . getName", "node . getName", "ReferenceTypeImpl . new", "UnsolvedSymbolException . new"], "29": ["WfdLog . d", "serviceList . size", "WfdLog . e", "element . getDevice", "service . getDevice", "element . getInstanceName", "service . getInstanceName", "serviceList . add", "WfdLog . d", "serviceList . size"], "30": ["SecurityClassConstants.ABSTRACT_HTML . equals", "accessObject . getClass", "WffSecurityException . new"], "32": ["valueClass . isPrimitive", "valueClass . getName", "PrimitiveObjectFactory . new"], "34": ["Long . toString"], "36": ["logger . isDebugEnabled", "logger . debug", "intent . getExtras", "notificationCallback . onMessage"], "37": ["migrator . migrate", "InternalMigrator . new"], "38": ["Utility . getJavaISO8601Time"], "39": ["network . isDirected"], "40": ["Math . max", "Page . getCurrent", "Math . max", "Page . getCurrent"], "41": ["Math . max", "Math . min", "Math . min"], "42": ["Doubles.FLOATING_POINT_PATTERN . matcher", "Float . parseFloat"], "44": ["FluxScanSeed . new"], "45": ["System . currentTimeMillis", "System . currentTimeMillis", "Thread . sleep", "Math . max", "System . currentTimeMillis"], "46": ["ValueEnforcer . notNull", "aSchema . getResource", "ret . setID", "aIDPool . getUniqueID", "aSchema . getID", "ret . setRich", "aSchema . getRichClone", "ret . setSchemaVersion", "aSchema . getSchemaVersion", "ret . setDefaultPhase", "aSchema . getDefaultPhase", "ret . setQueryBinding", "aSchema . getQueryBinding", "aSchema . hasTitle", "ret . setTitle", "aSchema . getTitle", "aSchema . hasAnyInclude", "aSchema . getAllNSs", "ret . addNS", "aNS . getClone", "aSchema . getAllLets", "ret . addLet", "aLet . getClone", "aSchema . getAllPhases", "ret . addPhase", "aSchema . getAllPatterns", "aMinifiedPattern . getRuleCount", "ret . addPattern", "aSchema . getPatternCount", "aSchema . hasDiagnostics", "ret . setDiagnostics", "aSchema . getDiagnostics", "ret . addForeignElements", "aSchema . getAllForeignElements", "ret . addForeignAttributes", "aSchema . getAllForeignAttributes", "PreprocessorLookup . new", "PreprocessorIDPool . new", "PSSchema . new", "SchematronPreprocessException . new"], "47": ["Utils . getObserverTag", "GroupSubscriptionTransformer . new"], "48": ["metricNamingStrategy . getStatementExecuteTimer", "query . getSql", "query . getSqlId"], "49": ["mFields . getString", "field . getIdentifier", "ProfileFieldConverter . forField", "NullPointerException . new"], "50": ["Math . max", "Math . min"], "51": ["currentReturn . plus", "totalProduct . multipliedBy", "Math . pow", "totalProduct . toDouble"], "52": ["Comment . new", "Submission . new", "Subreddit . new", "More . new"], "53": ["bridge . setJobName", "EFapsSession . get", "RandomUtil . randomAlphanumeric", "bridge . setJobName", "bridge . setJobContext", "Context . getThreadContext", "Context . getThreadContext", "Context . getThreadContext", "EFapsSession . get", "ExecutionBridge . new", "JobContext . new", "JobRunnable . new"], "54": ["InstructionList . new"], "55": ["s . trim"], "56": ["ENCODERS_MAP . get", "NullPointerException . new", "UnsupportedContextException . new"], "58": ["fieldsToJoin . stream", "f . getColumnExpression", "Collectors . joining"], "59": ["Auth.GoogleSignInApi . signOut", "status . isSuccess", "Log . w", "Log . e", "ResultCallback . new"], "61": ["multiple . addSuppressed", "RuntimeException . new"], "62": ["sb . append", "buffer . read", "Character . isLetterOrDigit", "sb . append", "buffer . read", "buffer . unread", "sb . toString", "StringBuilder . new", "JsonToken . new"], "63": ["config . setProperty"], "64": ["type . isArray", "Modifier . isInterface", "type . getModifiers", "log . isInfoEnabled", "log . infof", "method . getParameterTypes", "ArrayInjector . new", "VoidInjector . new", "NameInjector . new", "PathArgInjector . new"], "65": ["kryo . register", "Sets . unmodifiableNavigableSet", "UnmodifiableNavigableSetSerializer . new", "TreeSet . new"], "66": ["AssertionError . new"], "68": ["Operators . cancelledSubscription"], "69": ["Lang . concat"], "70": ["FileDownloadLog . w"], "71": ["PersistableBundleCompat . putString"], "72": ["Calendar . getInstance", "calendar . set", "calendar . getActualMaximum"], "73": ["c . setText", "c . setEntitySafe", "Comment . new"], "74": ["pipeline . ssmget", "JedisResult . new"], "75": ["NullPointerException . new", "IndexOutOfBoundsException . new", "IndexOutOfBoundsException . new"], "76": ["section . getName", "section.attributes . keySet", "section . getAttribute", "attributes . putValue", "attribute . getName", "attribute . getValue", "ManifestException . new"], "77": ["CLASSES_TO_ALWAYS_ACQUIRE . contains", "name . equals", "name . matches", "name . equals", "name . equals", "name . startsWith", "name . matches", "classesToNotAcquire . contains"], "78": ["properties . putAll", "System . getProperties", "properties . merge", "properties . getPrefixed", "allProperties . getPrefixed", "handlerProperties . isEmpty", "handlerProperties . getProperty", "handlerProperties . getProperty", "injector . getInstance", "Class . forName", "handlerProperties . getPrefixed", "beanProperties . stringPropertyNames", "beanProperties . getProperty", "BeanUtils . setProperty", "eventHandlers . get", "eventHandlers . put", "eventHandlersForType . add", "logger . log", "System . exit", "eventHandlers . isEmpty", "logger . info", "System . exit", "Runtime . getRuntime", "properties . getProperty", "logger . info", "eventPoller . initialize", "logger . log", "System . exit", "MergeableProperties . new", "LinkedHashMap . new", "ArrayList . new", "Thread . new", "URI . new"], "79": ["ClassUtils . getAbbreviatedName", "declaringClass . getName"], "81": ["type . isAssignableFrom", "defaultValue . getClass", "type . getSimpleName", "defaultValue . getClass", "UnexpectedLiquibaseException . new"], "82": ["queryParameters . get", "queryParameters . put", "LinkedHashMap . new", "RamlParameter . new"], "83": ["sipCache . inLocalMode", "transactionId . toLowerCase", "sipCache . getServerTransaction", "serverTransactionTable . putIfAbsent", "sipCache . getClientTransaction", "clientTransactionTable . putIfAbsent"], "85": ["BasicDBObjectBuilder . new"], "86": ["dbMetadataUtils . getDatabaseMetaData", "config . getCatalog", "config . getSchemaPattern", "config . getTableNamePattern", "rs . next", "column . setJdbcType", "rs . getInt", "column . setType", "rs . getString", "column . setLength", "rs . getInt", "column . setName", "rs . getString", "column . setNullable", "rs . getInt", "column . setScale", "rs . getInt", "column . setRemarks", "rs . getString", "column . setDefaultValue", "rs . getString", "rs . getString", "rs . getString", "rs . getString", "answer . get", "answer . put", "config . hasProcess", "config . getDatabaseProcess", "config . hasProcess", "config . getDatabaseProcess", "columns . add", "HashMap . new", "IntrospectedColumn . new", "IntrospectedTable . new", "ArrayList . new"], "87": ["ContentNegotiationAlgorithm . new"], "88": ["configuration . getPath", "configuration . getWebapp", "configuration . getClasspath", "configuration . getParentClassLoader", "configuration . getOverrideDescriptor", "configuration . getBaseResource", "configuration . getContainerJarPattern", "configuration . getWebInfJarPattern", "ctx . setAttribute", "JavaUtils . isPostJdk9", "ctx . setAttribute", "ctx . setAttribute", "Thread . currentThread", "ctx . setClassLoader", "ctx . setContextPath", "ctx . setBaseResource", "ctx . setBaseResource", "ctx . setOverrideDescriptor", "ctx . setConfigurations", "classes . toURI", "ctx . getMetaData", "ctx . setParentLoaderPriority", "ctx . setWar", "ctx . setServer", "server . setHandler", "WebAppContext . new", "CompositeClassLoader . new", "WebInfConfiguration . new", "WebXmlConfiguration . new", "AnnotationConfiguration . new", "JettyWebXmlConfiguration . new", "MetaInfConfiguration . new", "FragmentConfiguration . new", "File . new", "PathResource . new"], "89": ["persistentClass . getSimpleName", "CriteriaImpl . new"], "90": ["criteria . from", "criteria . select", "root . get"], "91": ["request . getContentType", "contentType . startsWith", "request . getMessagePayload", "out . putAll", "OAuth . decodeForm"], "92": ["ImmutableMap . of", "resolver . resolveType", "TypeResolver . new", "TypeResolver . new", "SimpleTypeToken . new"], "93": ["String . format", "connection . prepareStatement", "patternStop . get", "statement . setInt", "patternStop . get", "statement . setInt", "statement . setString", "patternStop . get", "statement . setInt", "patternStop . get", "LOG . debug", "statement . toString", "statement . executeUpdate", "LOG . debug"], "94": ["task . getId", "task . getStatus", "task . getId", "n . cancel"], "95": ["SPF . get", "SPF . get", "instance . getProfileBulk", "ProfileField . toIdentifierList", "Log . e", "SPF . get", "AsyncTaskLoader . new", "IllegalStateException . new", "AsyncTaskLoader . new", "IllegalArgumentException . new"], "96": ["Lang . isEmptyArray", "byJava . containsKey", "byJava . get", "theComposites . add", "byJava . get", "Lang . makeThrow", "type . getName"], "97": ["mTriggerTable . getAllTriggers", "mTriggerEngine . refreshTriggers", "mTriggerCache . refresh", "SPFActionCache . new"], "98": ["HttpClientBuilder . create", "URI . create", "credsProvider . setCredentials", "uri . getHost", "uri . getPort", "builder . setDefaultCredentialsProvider", "builder . build", "BasicCredentialsProvider . new", "AuthScope . new", "UsernamePasswordCredentials . new"], "99": ["System . arraycopy", "FluxFirstEmitting . new"]}