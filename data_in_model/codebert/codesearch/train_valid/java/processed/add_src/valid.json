[{"fid": 0, "label": "1", "url": "https://github.com/microfocus-idol/java-hod-client/blob/56359e5b93a5637c37ef82ce3fc78b95cf1f6d80/src/main/java/com/hp/autonomy/hod/client/api/analysis/viewdocument/ViewDocumentRequestBuilder.java#L55-L59", "function_name": "ViewDocumentRequestBuilder.addHighlightExpressions", "nl": "Adds values to the highlight_expression parameter", "code": "public ViewDocumentRequestBuilder addHighlightExpressions ( final String highlightExpression , final String ... highlightExpressions ) { this . highlightExpressions . add ( highlightExpression ) ; this . highlightExpressions . addAll ( Arrays . asList ( highlightExpressions ) ) ; return this ; }", "code_fid": 466175, "source_code": "public ViewDocumentRequestBuilder addHighlightExpressions(final String highlightExpression, final String... highlightExpressions) {\n        this.highlightExpressions.add(highlightExpression);\n        this.highlightExpressions.addAll(Arrays.asList(highlightExpressions));\n        return this;\n    }"}, {"fid": 1, "label": "1", "url": "https://github.com/lightblueseas/xml-extensions/blob/4c79d3b2a27349cc7b682d88ce55ac06025e6612/src/main/java/de/alpharogroup/xml/tag/Tag.java#L198-L240", "function_name": "Tag.toXmlString", "nl": "Creates from this { @link Tag } object an xml string .", "code": "public String toXmlString ( ) { final StringBuilder buffer = new StringBuilder ( ) ; buffer . append ( \"<\" ) ; buffer . append ( getName ( ) ) ; Optional < String > attr = TagExtensions . attributesToString ( getAttributes ( ) ) ; if ( attr . isPresent ( ) ) { buffer . append ( attr . get ( ) ) ; } if ( isEndTag ( ) ) { buffer . append ( \">\" ) ; if ( getChildren ( ) != null && ! getChildren ( ) . isEmpty ( ) ) { String processingContent = getContent ( ) ; Integer lastPosition = 0 ; for ( final ChildTagPosition child : getChildren ( ) ) { final String subContent = getContent ( ) . substring ( lastPosition , child . getPosition ( ) ) ; lastPosition = child . getPosition ( ) ; processingContent = processingContent . substring ( lastPosition , processingContent . length ( ) ) ; buffer . append ( subContent ) ; buffer . append ( child . getChild ( ) . toXmlString ( ) ) ; } buffer . append ( processingContent ) ; } else { buffer . append ( getContent ( ) ) ; } buffer . append ( \"</\" ) ; buffer . append ( getName ( ) ) ; buffer . append ( \">\" ) ; } else { buffer . append ( \"/>\" ) ; } return buffer . toString ( ) ; }", "code_fid": 466761, "source_code": "public String toXmlString()\n\t{\n\t\tfinal StringBuilder buffer = new StringBuilder();\n\t\tbuffer.append(\"<\");\n\t\tbuffer.append(getName());\n\t\tOptional<String> attr = TagExtensions.attributesToString(getAttributes());\n\t\tif (attr.isPresent())\n\t\t{\n\t\t\tbuffer.append(attr.get());\n\t\t}\n\t\tif (isEndTag())\n\t\t{\n\t\t\tbuffer.append(\">\");\n\t\t\tif (getChildren() != null && !getChildren().isEmpty())\n\t\t\t{\n\t\t\t\tString processingContent = getContent();\n\t\t\t\tInteger lastPosition = 0;\n\t\t\t\tfor (final ChildTagPosition child : getChildren())\n\t\t\t\t{\n\t\t\t\t\tfinal String subContent = getContent().substring(lastPosition,\n\t\t\t\t\t\tchild.getPosition());\n\t\t\t\t\tlastPosition = child.getPosition();\n\t\t\t\t\tprocessingContent = processingContent.substring(lastPosition,\n\t\t\t\t\t\tprocessingContent.length());\n\t\t\t\t\tbuffer.append(subContent);\n\t\t\t\t\tbuffer.append(child.getChild().toXmlString());\n\t\t\t\t}\n\t\t\t\tbuffer.append(processingContent);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbuffer.append(getContent());\n\t\t\t}\n\t\t\tbuffer.append(\"</\");\n\t\t\tbuffer.append(getName());\n\t\t\tbuffer.append(\">\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbuffer.append(\"/>\");\n\t\t}\n\t\treturn buffer.toString();\n\t}"}, {"fid": 2, "label": "0", "url": "https://github.com/Netflix/Fenzo/blob/3c1d8fc84027900231756e5072f0e1de303772cf/fenzo-core/src/main/java/com/netflix/fenzo/TaskScheduler.java#L1247-L1250", "function_name": "TaskScheduler.getTaskAssignerIntl", "nl": "Disable the virtual machine with the specified hostname . The scheduler will not use disabled hosts for allocating resources to tasks .", "code": "Action2 < TaskRequest , String > getTaskAssignerIntl ( ) throws IllegalStateException { return ( request , hostname ) -> { try ( AutoCloseable ignored = stateMonitor . enter ( ) ) { assignableVMs . setTaskAssigned ( request , hostname ) ; } catch ( Exception e ) { logger . error ( \"Unexpected error from state monitor: \" + e . getMessage ( ) , e ) ; throw new IllegalStateException ( e ) ; } } ; }", "code_fid": 460145, "source_code": "Action2<TaskRequest, String> getTaskAssignerIntl() throws IllegalStateException {\r\n        return (request, hostname) -> {\r\n            try (AutoCloseable ignored = stateMonitor.enter()) {\r\n                assignableVMs.setTaskAssigned(request, hostname);\r\n            } catch (Exception e) {\r\n                logger.error(\"Unexpected error from state monitor: \" + e.getMessage(), e);\r\n                throw new IllegalStateException(e);\r\n            }\r\n        };\r\n    }"}, {"fid": 3, "label": "1", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/lang/Streams.java#L389-L398", "function_name": "Streams.safeClose", "nl": "\u5173\u95ed\u4e00\u4e2a\u53ef\u5173\u95ed\u5bf9\u8c61\uff0c\u53ef\u4ee5\u63a5\u53d7 null\u3002\u5982\u679c\u6210\u529f\u5173\u95ed\uff0c\u8fd4\u56de true\uff0c\u53d1\u751f\u5f02\u5e38 \u8fd4\u56de false", "code": "public static boolean safeClose ( Closeable cb ) { if ( null != cb ) try { cb . close ( ) ; } catch ( IOException e ) { return false ; } return true ; }", "code_fid": 458139, "source_code": "public static boolean safeClose(Closeable cb) {\r\n        if (null != cb)\r\n            try {\r\n                cb.close();\r\n            }\r\n            catch (IOException e) {\r\n                return false;\r\n            }\r\n        return true;\r\n    }"}, {"fid": 4, "label": "0", "url": "https://github.com/linkedin/Spyglass/blob/3816f2da13b75e1a20b2911d1b780b73f44e1150/spyglass/src/main/java/com/linkedin/android/spyglass/tokenization/impl/WordTokenizer.java#L218-L227", "function_name": "WordTokenizer.isExplicitChar", "nl": "{", "code": "public boolean isExplicitChar ( final char c ) { final String explicitChars = mConfig . EXPLICIT_CHARS ; for ( int i = 0 ; i < explicitChars . length ( ) ; i ++ ) { char explicitChar = explicitChars . charAt ( i ) ; if ( c == explicitChar ) { return true ; } } return false ; }", "code_fid": 461409, "source_code": "public boolean isExplicitChar(final char c) {\n        final String explicitChars = mConfig.EXPLICIT_CHARS;\n        for (int i = 0; i < explicitChars.length(); i++) {\n            char explicitChar = explicitChars.charAt(i);\n            if (c == explicitChar) {\n                return true;\n            }\n        }\n        return false;\n    }"}, {"fid": 5, "label": "0", "url": "https://github.com/nhaarman/ListViewAnimations/blob/23617960178fb5af3099c07996569cc305a40945/lib-manipulation/src/main/java/com/nhaarman/listviewanimations/itemmanipulation/animateaddition/InsertQueue.java#L120-L131", "function_name": "InsertQueue.removeActiveIndex", "nl": "Inserts pending items into the Insertable and adds them to the active positions ( correctly managing position shifting ) . Clears the pending items .", "code": "public void removeActiveIndex ( final int index ) { boolean found = false ; for ( Iterator < AtomicInteger > iterator = mActiveIndexes . iterator ( ) ; iterator . hasNext ( ) && ! found ; ) { if ( iterator . next ( ) . get ( ) == index ) { iterator . remove ( ) ; found = true ; } } if ( mActiveIndexes . isEmpty ( ) ) { insertPending ( ) ; } }", "code_fid": 460627, "source_code": "public void removeActiveIndex(final int index) {\n        boolean found = false;\n        for (Iterator<AtomicInteger> iterator = mActiveIndexes.iterator(); iterator.hasNext() && !found; ) {\n            if (iterator.next().get() == index) {\n                iterator.remove();\n                found = true;\n            }\n        }\n        if (mActiveIndexes.isEmpty()) {\n            insertPending();\n        }\n    }"}, {"fid": 6, "label": "1", "url": "https://github.com/google/guava/blob/7155d12b70a2406fa84d94d4b8b3bc108e89abfd/guava/src/com/google/common/primitives/ImmutableDoubleArray.java#L156-L158", "function_name": "ImmutableDoubleArray.copyOf", "nl": "Returns an immutable array containing the given values in order .", "code": "public static ImmutableDoubleArray copyOf ( Collection < Double > values ) { return values . isEmpty ( ) ? EMPTY : new ImmutableDoubleArray ( Doubles . toArray ( values ) ) ; }", "code_fid": 455539, "source_code": "public static ImmutableDoubleArray copyOf(Collection<Double> values) {\n    return values.isEmpty() ? EMPTY : new ImmutableDoubleArray(Doubles.toArray(values));\n  }"}, {"fid": 7, "label": "0", "url": "https://github.com/robolectric/robolectric/blob/4fa79a2c72f8abbf742ab920419653c207b41d62/shadows/framework/src/main/java/org/robolectric/shadows/ResourceHelper.java#L103-L117", "function_name": "ResourceHelper.getColor", "nl": "Returns the TypedValue color type represented by the given string value", "code": "public static int getColor ( String value ) { if ( value != null ) { if ( value . startsWith ( \"#\" ) == false ) { throw new NumberFormatException ( String . format ( \"Color value '%s' must start with #\" , value ) ) ; } value = value . substring ( 1 ) ; // make sure it's not longer than 32bit if ( value . length ( ) > 8 ) { throw new NumberFormatException ( String . format ( \"Color value '%s' is too long. Format is either\" + \"#AARRGGBB, #RRGGBB, #RGB, or #ARGB\" , value ) ) ; } if ( value . length ( ) == 3 ) { // RGB format char [ ] color = new char [ 8 ] ; color [ 0 ] = color [ 1 ] = ' ' ; color [ 2 ] = color [ 3 ] = value . charAt ( 0 ) ; color [ 4 ] = color [ 5 ] = value . charAt ( 1 ) ; color [ 6 ] = color [ 7 ] = value . charAt ( 2 ) ; value = new String ( color ) ; } else if ( value . length ( ) == 4 ) { // ARGB format char [ ] color = new char [ 8 ] ; color [ 0 ] = color [ 1 ] = value . charAt ( 0 ) ; color [ 2 ] = color [ 3 ] = value . charAt ( 1 ) ; color [ 4 ] = color [ 5 ] = value . charAt ( 2 ) ; color [ 6 ] = color [ 7 ] = value . charAt ( 3 ) ; value = new String ( color ) ; } else if ( value . length ( ) == 6 ) { value = \"FF\" + value ; } // this is a RRGGBB or AARRGGBB value // Integer.parseInt will fail to inferFromValue strings like \"ff191919\", so we use // a Long, but cast the result back into an int, since we know that we're only // dealing with 32 bit values. return ( int ) Long . parseLong ( value , 16 ) ; } throw new NumberFormatException ( ) ; }", "code_fid": 456953, "source_code": "public static int getColor(String value) {\n    if (value != null) {\n      if (value.startsWith(\"#\") == false) {\n        throw new NumberFormatException(\n            String.format(\"Color value '%s' must start with #\", value));\n      }\n\n      value = value.substring(1);\n\n      // make sure it's not longer than 32bit\n      if (value.length() > 8) {\n        throw new NumberFormatException(String.format(\n            \"Color value '%s' is too long. Format is either\" +\n            \"#AARRGGBB, #RRGGBB, #RGB, or #ARGB\",\n            value));\n      }\n\n      if (value.length() == 3) { // RGB format\n        char[] color = new char[8];\n        color[0] = color[1] = 'F';\n        color[2] = color[3] = value.charAt(0);\n        color[4] = color[5] = value.charAt(1);\n        color[6] = color[7] = value.charAt(2);\n        value = new String(color);\n      } else if (value.length() == 4) { // ARGB format\n        char[] color = new char[8];\n        color[0] = color[1] = value.charAt(0);\n        color[2] = color[3] = value.charAt(1);\n        color[4] = color[5] = value.charAt(2);\n        color[6] = color[7] = value.charAt(3);\n        value = new String(color);\n      } else if (value.length() == 6) {\n        value = \"FF\" + value;\n      }\n\n      // this is a RRGGBB or AARRGGBB value\n\n      // Integer.parseInt will fail to inferFromValue strings like \"ff191919\", so we use\n      // a Long, but cast the result back into an int, since we know that we're only\n      // dealing with 32 bit values.\n      return (int)Long.parseLong(value, 16);\n    }\n\n    throw new NumberFormatException();\n  }"}, {"fid": 8, "label": "1", "url": "https://github.com/advantageous/qbit/blob/533b3671785f238d576b02b5290c6525ed60f583/qbit/core/src/main/java/io/advantageous/qbit/server/HttpRequestServiceServerHandlerUsingMetaImpl.java#L196-L237", "function_name": "HttpRequestServiceServerHandlerUsingMetaImpl.handleResponseFromServiceToHttpResponse", "nl": "2nd MOST IMPORTANT METHOD FOR DEBUGGING WHY SOMETHING IS NOT CALLED .", "code": "@ Override public void handleResponseFromServiceToHttpResponse ( final Response < Object > response , final HttpRequest originatingRequest ) { final String key = Str . add ( \"\" + originatingRequest . id ( ) , \"|\" , originatingRequest . returnAddress ( ) ) ; this . outstandingRequestMap . remove ( key ) ; if ( response . wasErrors ( ) ) { handleError ( response , originatingRequest ) ; } else { if ( response . body ( ) instanceof HttpResponse ) { writeHttpResponse ( originatingRequest . getReceiver ( ) , ( ( HttpResponse ) response . body ( ) ) ) ; } else { final RequestMetaData requestMetaData = metaDataProviderMap . get ( RequestMethod . valueOf ( originatingRequest . getMethod ( ) ) ) . get ( originatingRequest . address ( ) ) ; final ServiceMethodMeta serviceMethodMeta = requestMetaData . getMethod ( ) ; final int responseCode = serviceMethodMeta . getResponseCode ( ) ; MultiMap < String , String > headers = response . headers ( ) ; if ( requestMetaData . getRequest ( ) . hasResponseHeaders ( ) ) { if ( response . headers ( ) == MultiMap . EMPTY ) { headers = new MultiMapImpl <> ( ) ; } else { headers = response . headers ( ) ; } headers . putAllCopyLists ( requestMetaData . getRequest ( ) . getResponseHeaders ( ) ) ; } writeResponse ( originatingRequest . getReceiver ( ) , responseCode == - 1 ? HttpStatus . OK : responseCode , serviceMethodMeta . getContentType ( ) , jsonMapper . toJson ( response . body ( ) ) , headers ) ; } } }", "code_fid": 461781, "source_code": "@Override\n    public void handleResponseFromServiceToHttpResponse(final Response<Object> response, final HttpRequest originatingRequest) {\n\n        final String key = Str.add(\"\" + originatingRequest.id(), \"|\", originatingRequest.returnAddress());\n        this.outstandingRequestMap.remove(key);\n\n\n        if (response.wasErrors()) {\n            handleError(response, originatingRequest);\n        } else {\n            if (response.body() instanceof HttpResponse) {\n                writeHttpResponse(originatingRequest.getReceiver(), ((HttpResponse) response.body()));\n            } else {\n                final RequestMetaData requestMetaData = metaDataProviderMap\n                        .get(RequestMethod.valueOf(originatingRequest.getMethod())).get(originatingRequest.address());\n\n                final ServiceMethodMeta serviceMethodMeta = requestMetaData.getMethod();\n                final int responseCode = serviceMethodMeta.getResponseCode();\n\n\n                MultiMap<String, String> headers = response.headers();\n\n                if (requestMetaData.getRequest().hasResponseHeaders()) {\n                    if (response.headers() == MultiMap.EMPTY) {\n                        headers = new MultiMapImpl<>();\n                    } else {\n                        headers = response.headers();\n                    }\n                    headers.putAllCopyLists(requestMetaData.getRequest().getResponseHeaders());\n                }\n\n                writeResponse(originatingRequest.getReceiver(),\n                        responseCode == -1 ? HttpStatus.OK : responseCode,\n                        serviceMethodMeta.getContentType(),\n                        jsonMapper.toJson(response.body()),\n                        headers);\n\n            }\n        }\n\n\n    }"}, {"fid": 9, "label": "1", "url": "https://github.com/camunda-consulting/code/blob/11f89fbfcca7c8847fefc724cc65ee4de048f61d/snippets/four-eyes-advanced/four-eyes-advanced-process-engine-plugin/src/main/java/org/camunda/bpm/examples/FourEyesExtensionsParseListener.java#L48-L70", "function_name": "FourEyesExtensionsParseListener.addFourEyesTaskListener", "nl": "Add TaskListener on complete event generically every time so we don t have to add it in the XML .", "code": "private void addFourEyesTaskListener ( ActivityImpl activity ) { UserTaskActivityBehavior userTaskActivityBehavior = ( UserTaskActivityBehavior ) activity . getActivityBehavior ( ) ; boolean listenerAlreadyExists = false ; // check that the listener wasn't added in the XML explicitly List < TaskListener > existingListeners = userTaskActivityBehavior . getTaskDefinition ( ) . getTaskListeners ( ) . get ( \"complete\" ) ; for ( TaskListener taskListener : existingListeners ) { if ( taskListener instanceof ClassDelegate && ( ( ClassDelegate ) taskListener ) . getClassName ( ) . equals ( TaskCompletionListener . class . getName ( ) ) ) { listenerAlreadyExists = true ; logger . info ( TaskCompletionListener . class . getSimpleName ( ) + \" was already explicitly added to usertask in the bpmn xml.\" ) ; break ; } } if ( ! listenerAlreadyExists ) { logger . info ( \"Adding \" + TaskCompletionListener . class . getSimpleName ( ) + \" implicitly to usertask.\" ) ; ClassDelegate taskListener = new ClassDelegate ( TaskCompletionListener . class , null ) ; userTaskActivityBehavior . getTaskDefinition ( ) . addTaskListener ( \"complete\" , taskListener ) ; } }", "code_fid": 460313, "source_code": "private void addFourEyesTaskListener(ActivityImpl activity) {\n    UserTaskActivityBehavior userTaskActivityBehavior = (UserTaskActivityBehavior) activity.getActivityBehavior();\n\n    boolean listenerAlreadyExists = false;\n\n    // check that the listener wasn't added in the XML explicitly\n    List<TaskListener> existingListeners = userTaskActivityBehavior.getTaskDefinition().getTaskListeners().get(\"complete\");\n    for (TaskListener taskListener : existingListeners) {\n      if (taskListener instanceof ClassDelegate &&\n          ((ClassDelegate)taskListener).getClassName().equals(TaskCompletionListener.class.getName())) {\n        listenerAlreadyExists = true;\n        logger.info(TaskCompletionListener.class.getSimpleName() + \" was already explicitly added to usertask in the bpmn xml.\");\n        break;\n      }\n    }\n\n    if (!listenerAlreadyExists) {\n      logger.info(\"Adding \" + TaskCompletionListener.class.getSimpleName() + \" implicitly to usertask.\");\n      ClassDelegate taskListener = new ClassDelegate(TaskCompletionListener.class, null);\n      userTaskActivityBehavior.getTaskDefinition().addTaskListener(\"complete\", taskListener);\n    }\n\n  }"}, {"fid": 10, "label": "1", "url": "https://github.com/echocat/jomon/blob/b3b81dc3f8ca2b17f87492090b86f3b8dea5fe32/runtime/src/main/java/org/echocat/jomon/runtime/CollectionUtils.java#L188-L191", "function_name": "CollectionUtils.asImmutableCollection", "nl": "Returns an unmodifiable {", "code": "@ Nonnull public static < T > Collection < T > asImmutableCollection ( @ Nullable T ... objects ) { return unmodifiableCollection ( asCollection ( objects ) ) ; }", "code_fid": 469237, "source_code": "@Nonnull\n    public static <T> Collection<T> asImmutableCollection(@Nullable T... objects) {\n        return unmodifiableCollection(asCollection(objects));\n    }"}, {"fid": 11, "label": "0", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/lang/Files.java#L721-L723", "function_name": "Files.isDirectory", "nl": "\u83b7\u53d6\u8f93\u51fa\u6d41", "code": "public static boolean isDirectory ( File f ) { if ( null == f ) return false ; if ( ! f . exists ( ) ) return false ; if ( ! f . isDirectory ( ) ) return false ; return true ; }", "code_fid": 457793, "source_code": "public static boolean isDirectory(File f) {\r\n        if (null == f)\r\n            return false;\r\n        if (!f.exists())\r\n            return false;\r\n        if (!f.isDirectory())\r\n            return false;\r\n        return true;\r\n    }"}, {"fid": 12, "label": "1", "url": "https://github.com/mongodb/mongo-java-driver/blob/a92d47e2e9f2fca55d09229a0a2e2cdc714db085/driver-legacy/src/main/com/mongodb/DB.java#L519-L525", "function_name": "DB.command", "nl": "Executes a database command with the selected readPreference and encodes the command using the given encoder .", "code": "public CommandResult command ( final DBObject command , final ReadPreference readPreference , @ Nullable final DBEncoder encoder ) { try { return executeCommand ( wrap ( command , encoder ) , getCommandReadPreference ( command , readPreference ) ) ; } catch ( MongoCommandException ex ) { return new CommandResult ( ex . getResponse ( ) , ex . getServerAddress ( ) ) ; } }", "code_fid": 459216, "source_code": "public CommandResult command(final DBObject command, final ReadPreference readPreference, @Nullable final DBEncoder encoder) {\n        try {\n            return executeCommand(wrap(command, encoder), getCommandReadPreference(command, readPreference));\n        } catch (MongoCommandException ex) {\n            return new CommandResult(ex.getResponse(), ex.getServerAddress());\n        }\n    }"}, {"fid": 13, "label": "1", "url": "https://github.com/kiegroup/optaplanner/blob/b8f1459b4e6b0f7aafe941fd165bff640c11d7d5/optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/XStreamXmlSolverFactory.java#L50-L59", "function_name": "XStreamXmlSolverFactory.buildXStream", "nl": "Builds the {", "code": "public static XStream buildXStream ( ) { XStream xStream = new XStream ( ) ; xStream . setMode ( XStream . ID_REFERENCES ) ; xStream . aliasSystemAttribute ( \"xStreamId\" , \"id\" ) ; xStream . aliasSystemAttribute ( \"xStreamRef\" , \"reference\" ) ; xStream . processAnnotations ( SolverConfig . class ) ; XStream . setupDefaultSecurity ( xStream ) ; xStream . allowTypesByRegExp ( new String [ ] { \"org\\\\.optaplanner\\\\.\\\\w+\\\\.config\\\\..*\" } ) ; return xStream ; }", "code_fid": 458686, "source_code": "public static XStream buildXStream() {\n        XStream xStream = new XStream();\n        xStream.setMode(XStream.ID_REFERENCES);\n        xStream.aliasSystemAttribute(\"xStreamId\", \"id\");\n        xStream.aliasSystemAttribute(\"xStreamRef\", \"reference\");\n        xStream.processAnnotations(SolverConfig.class);\n        XStream.setupDefaultSecurity(xStream);\n        xStream.allowTypesByRegExp(new String[]{\"org\\\\.optaplanner\\\\.\\\\w+\\\\.config\\\\..*\"});\n        return xStream;\n    }"}, {"fid": 14, "label": "0", "url": "https://github.com/Commonjava/indy/blob/38bf28dfce3bc25745ed239a5cd74efc56cf5c01/addons/pkg-maven/common/src/main/java/org/commonjava/indy/pkg/maven/content/MetadataStoreListener.java#L172-L220", "function_name": "MetadataMergeListener.clearMergedPath", "nl": "If group members changed should clear the cascading groups metadata cache", "code": "@ Override public void clearMergedPath ( ArtifactStore originatingStore , Set < Group > affectedGroups , String path ) { final Map < String , MetadataInfo > metadataMap = versionMetadataCache . get ( originatingStore . getKey ( ) ) ; if ( metadataMap != null && ! metadataMap . isEmpty ( ) ) { if ( metadataMap . get ( path ) != null ) { metadataMap . remove ( path ) ; affectedGroups . forEach ( group -> { final Map < String , MetadataInfo > grpMetaMap = versionMetadataCache . get ( group . getKey ( ) ) ; if ( grpMetaMap != null && ! grpMetaMap . isEmpty ( ) ) { grpMetaMap . remove ( path ) ; } } ) ; } } }", "code_fid": 463651, "source_code": "@Override\n    public void clearMergedPath( ArtifactStore originatingStore, Set<Group> affectedGroups, String path )\n    {\n        final Map<String, MetadataInfo> metadataMap = versionMetadataCache.get( originatingStore.getKey() );\n\n        if ( metadataMap != null && !metadataMap.isEmpty() )\n        {\n            if ( metadataMap.get( path ) != null )\n            {\n                metadataMap.remove( path );\n                affectedGroups.forEach( group -> {\n                    final Map<String, MetadataInfo> grpMetaMap = versionMetadataCache.get( group.getKey() );\n                    if ( grpMetaMap != null && !grpMetaMap.isEmpty() )\n                    {\n                        grpMetaMap.remove( path );\n                    }\n                } );\n            }\n        }\n    }"}, {"fid": 15, "label": "1", "url": "https://github.com/chkal/criteria4jpa/blob/3d8d9952808be9aa7f57130d5e4fd3606dba3100/src/main/java/org/criteria4jpa/criterion/Restrictions.java#L171-L173", "function_name": "Restrictions.between", "nl": "Adds a between constraint to a <i > persistent field< / i > .", "code": "public static Criterion between ( String relativePath , Object lo , Object hi ) { return new BetweenExpression ( relativePath , lo , hi , false ) ; }", "code_fid": 469314, "source_code": "public static Criterion between(String relativePath, Object lo, Object hi) {\n    return new BetweenExpression(relativePath, lo, hi, false);\n  }"}, {"fid": 16, "label": "0", "url": "https://github.com/gquintana/metrics-sql/blob/1f7966be77007cd99c383009e373c140aecd8ac7/src/main/java/com/github/gquintana/metrics/sql/DefaultMetricNamingStrategy.java#L128-L130", "function_name": "DefaultMetricNamingStrategy.getCallableStatementLifeTimer", "nl": "{", "code": "public String getCallableStatementLifeTimer ( String sql , String sqlId ) { return getStatementTimer ( CallableStatement . class , sql , sqlId ) ; }", "code_fid": 467861, "source_code": "public String getCallableStatementLifeTimer(String sql, String sqlId) {\n        return getStatementTimer(CallableStatement.class, sql, sqlId);\n    }"}, {"fid": 17, "label": "0", "url": "https://github.com/webfirmframework/wff/blob/e59def3a20d44f91e112b113448d951d7514af2e/wffweb/src/main/java/com/webfirmframework/wffweb/tag/html/AbstractHtml.java#L2969-L2973", "function_name": "AbstractHtml.toHtmlString", "nl": "@param os the object of { @code OutputStream } to write to . @param rebuild true to rebuild &amp ; false to write previously built bytes . @param flushOnWrite true to flush on each write to OutputStream @return the total number of bytes written", "code": "@ Override public String toHtmlString ( final Charset charset ) { final Lock lock = sharedObject . getLock ( ACCESS_OBJECT ) . writeLock ( ) ; final Charset previousCharset = this . charset ; try { lock . lock ( ) ; this . charset = charset ; // assigning it to new variable is very important here as this // line of code should invoke before finally block final String htmlString = toHtmlString ( ) ; return htmlString ; } finally { this . charset = previousCharset ; lock . unlock ( ) ; } }", "code_fid": 464857, "source_code": "@Override\n    public String toHtmlString(final Charset charset) {\n        final Lock lock = sharedObject.getLock(ACCESS_OBJECT).writeLock();\n        final Charset previousCharset = this.charset;\n        try {\n            lock.lock();\n            this.charset = charset;\n            // assigning it to new variable is very important here as this\n            // line of code should invoke before finally block\n            final String htmlString = toHtmlString();\n            return htmlString;\n        } finally {\n            this.charset = previousCharset;\n            lock.unlock();\n        }\n    }"}, {"fid": 18, "label": "1", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/img/Images.java#L739-L750", "function_name": "Images.grayImage", "nl": "\u83b7\u53d6\u7070\u5ea6\u56fe\u50cf", "code": "public static BufferedImage grayImage ( Object srcIm ) { BufferedImage srcImage = read ( srcIm ) ; BufferedImage grayImage = new BufferedImage ( srcImage . getWidth ( ) , srcImage . getHeight ( ) , srcImage . getType ( ) ) ; for ( int i = 0 ; i < srcImage . getWidth ( ) ; i ++ ) { for ( int j = 0 ; j < srcImage . getHeight ( ) ; j ++ ) { grayImage . setRGB ( i , j , Colors . getGray ( srcImage , i , j ) ) ; } } return grayImage ; }", "code_fid": 457928, "source_code": "public static BufferedImage grayImage(Object srcIm) {\n        BufferedImage srcImage = read(srcIm);\n        BufferedImage grayImage = new BufferedImage(srcImage.getWidth(),\n                                                    srcImage.getHeight(),\n                                                    srcImage.getType());\n        for (int i = 0; i < srcImage.getWidth(); i++) {\n            for (int j = 0; j < srcImage.getHeight(); j++) {\n                grayImage.setRGB(i, j, Colors.getGray(srcImage, i, j));\n            }\n        }\n        return grayImage;\n    }"}, {"fid": 19, "label": "0", "url": "https://github.com/advantageous/qbit-extensions/blob/bdd96a7171081480deadd6fc140edb45c3102e28/qbit-ext/jms/src/main/java/io/advantageous/qbit/jms/JmsServiceBuilder.java#L558-L568", "function_name": "JmsServiceBuilder.getConnectionSupplier", "nl": "Used to construct properties for JMS JNDI context . Populates with <p > properties . put ( Context . INITIAL_CONTEXT_FACTORY getInitialContextFactory () ) ; properties . put ( Context . PROVIDER_URL getProviderURL () ) ; Then adds all of the setting in jndi settings .", "code": "public Supplier < Connection > getConnectionSupplier ( ) { final boolean startConnection = isStartConnection ( ) ; if ( connectionSupplier == null ) { if ( getUserName ( ) == null ) { connectionSupplier = ( ) -> { try { final Connection connection = getConnectionFactory ( ) . createConnection ( ) ; if ( startConnection ) { connection . start ( ) ; } return connection ; } catch ( JMSException e ) { throw new JmsNotConnectedException ( \"Unable to create context\" , e ) ; } } ; } else { final String userName = getUserName ( ) ; final String password = getPassword ( ) ; connectionSupplier = ( ) -> { try { final Connection connection = getConnectionFactory ( ) . createConnection ( userName , password ) ; if ( startConnection ) { connection . start ( ) ; } return connection ; } catch ( JMSException e ) { throw new JmsNotConnectedException ( \"Unable to create context for user \" + userName , e ) ; } } ; } } return connectionSupplier ; }", "code_fid": 468971, "source_code": "public Supplier<Connection> getConnectionSupplier() {\n        final boolean startConnection = isStartConnection();\n\n        if (connectionSupplier == null) {\n            if (getUserName() == null) {\n                connectionSupplier = () -> {\n                    try {\n                        final Connection connection = getConnectionFactory().createConnection();\n                        if (startConnection) {\n                            connection.start();\n                        }\n                        return connection;\n                    } catch (JMSException e) {\n                        throw new JmsNotConnectedException(\"Unable to create context\", e);\n                    }\n                };\n            } else {\n                final String userName = getUserName();\n                final String password = getPassword();\n\n                connectionSupplier = () -> {\n                    try {\n                        final Connection connection = getConnectionFactory().createConnection(userName, password);\n                        if (startConnection) {\n                            connection.start();\n                        }\n                        return connection;\n                    } catch (JMSException e) {\n                        throw new JmsNotConnectedException(\"Unable to create context for user \" + userName, e);\n                    }\n                };\n            }\n        }\n        return connectionSupplier;\n    }"}, {"fid": 20, "label": "1", "url": "https://github.com/jReddit/jReddit/blob/ac0b518f190c30228e401ef66d53329bbd27bad6/src/main/java/com/github/jreddit/request/util/KeyValueFormatter.java#L29-L66", "function_name": "KeyValueFormatter.format", "nl": "Format a mapping of key - value pairs to a string separating key from value using an equals ( = ) sign and separating pairs using an ampersand ( & ) sign .", "code": "public static String format ( Map < String , String > keyValueParameters , boolean encodeUTF8 ) { // Key set Set < String > keys = keyValueParameters . keySet ( ) ; // Iterate over keys String paramsString = \"\" ; boolean start = true ; for ( String key : keys ) { // Add separation ampersand if ( ! start ) { paramsString = paramsString . concat ( \"&\" ) ; } else { start = false ; } // Retrieve value String value = keyValueParameters . get ( key ) ; // Encode key if ( encodeUTF8 ) { try { value = URLEncoder . encode ( value , \"UTF-8\" ) ; } catch ( UnsupportedEncodingException e ) { LOGGER . warn ( \"Unsupported Encoding Exception thrown when encoding value\" , e ) ; } } // Add key-value pair paramsString = paramsString . concat ( key + \"=\" + value ) ; } // Return final parameter string return paramsString ; }", "code_fid": 462057, "source_code": "public static String format(Map<String, String> keyValueParameters, boolean encodeUTF8) {\n        \n        // Key set\n        Set<String> keys = keyValueParameters.keySet();\n        \n        // Iterate over keys\n        String paramsString = \"\";\n        boolean start = true;\n        for (String key : keys) {\n            \n            // Add separation ampersand\n            if (!start) {\n                paramsString = paramsString.concat(\"&\");\n            } else {\n                start = false;\n            }\n            \n            // Retrieve value\n            String value = keyValueParameters.get(key);\n            \n            // Encode key\n            if (encodeUTF8) {\n                try {\n                    value = URLEncoder.encode(value, \"UTF-8\");\n                } catch (UnsupportedEncodingException e) {\n                    LOGGER.warn(\"Unsupported Encoding Exception thrown when encoding value\", e);\n                }\n            }\n            \n            // Add key-value pair\n            paramsString = paramsString.concat(key + \"=\" + value);\n\n        }\n        \n        // Return final parameter string\n        return paramsString;\n        \n    }"}, {"fid": 21, "label": "1", "url": "https://github.com/ocpsoft/rewrite/blob/eded0bad0101d119a3a1e67ed3f97a3bc9a8222e/annotations-impl/src/main/java/org/ocpsoft/rewrite/annotation/scan/AbstractClassFinder.java#L163-L222", "function_name": "AbstractClassFinder.processClass", "nl": "<p > Handle a single class to process . This method should only be called if the class name is accepted by the { @link PackageFilter } . < / p > <p > If <code > classFileStream< / code > is not <code > null< / code > the method will first try to check whether the class files may contain annotations by scanning it with the { @link ByteCodeFilter } . If no { @link InputStream } is supplied this check will be skipped . After that the method will create an instance of the class and then call { @link ClassVisitor#visit ( Class org . ocpsoft . prettyfaces . annotation . PrettyConfig ) } . < / p > <p > Please not the the called of this method is responsible to close the supplied { @link InputStream } ! < / p >", "code": "protected void processClass ( String className , InputStream classFileStream , ClassVisitor visitor ) { // skip Java 9 module metadata class files if ( className . equals ( \"module-info\" ) ) return ; // bytecode check is only performed if the InputStream is available if ( classFileStream != null ) { // we must take care of IOExceptions thrown by ByteCodeAnnotationFilter try { // call bytecode filter boolean shouldScanClass = byteCodeFilter . accept ( classFileStream ) ; // No annotations -> abort if ( ! shouldScanClass ) { return ; } // filter says we should scan the class if ( log . isDebugEnabled ( ) ) { log . debug ( \"Bytecode filter recommends to scan class: \" + className ) ; } } catch ( IOException e ) { if ( log . isDebugEnabled ( ) ) { log . debug ( \"Failed to parse class file: \" + className , e ) ; } } } try { // request this class from the ClassLoader Class < ? > clazz = Class . forName ( className , false , classLoader ) ; // call handler visitor . visit ( clazz ) ; } catch ( NoClassDefFoundError e ) { // reference to another class unknown to the classloader log . debug ( \"Could not load class '\" + className + \"': \" + e . toString ( ) ) ; } catch ( ClassNotFoundException e ) { // should no happen, because we found the class on the classpath throw new IllegalStateException ( \"Unable to load class: \" + className , e ) ; } }", "code_fid": 462844, "source_code": "protected void processClass(String className, InputStream classFileStream, ClassVisitor visitor)\n   {\n\n      // skip Java 9 module metadata class files\n      if (className.equals(\"module-info\")) return ;\n\n      // bytecode check is only performed if the InputStream is available\n      if (classFileStream != null)\n      {\n\n         // we must take care of IOExceptions thrown by ByteCodeAnnotationFilter\n         try\n         {\n\n            // call bytecode filter\n            boolean shouldScanClass = byteCodeFilter.accept(classFileStream);\n\n            // No annotations -> abort\n            if (!shouldScanClass)\n            {\n               return;\n            }\n\n            // filter says we should scan the class\n            if (log.isDebugEnabled())\n            {\n               log.debug(\"Bytecode filter recommends to scan class: \" + className);\n            }\n\n         }\n         catch (IOException e)\n         {\n            if (log.isDebugEnabled())\n            {\n               log.debug(\"Failed to parse class file: \" + className, e);\n            }\n         }\n      }\n\n      try\n      {\n         // request this class from the ClassLoader\n         Class<?> clazz = Class.forName(className, false, classLoader);\n\n         // call handler\n         visitor.visit(clazz);\n\n      }\n      catch (NoClassDefFoundError e)\n      {\n         // reference to another class unknown to the classloader\n         log.debug(\"Could not load class '\" + className + \"': \" + e.toString());\n      }\n      catch (ClassNotFoundException e)\n      {\n         // should no happen, because we found the class on the classpath\n         throw new IllegalStateException(\"Unable to load class: \" + className, e);\n      }\n\n   }"}, {"fid": 22, "label": "0", "url": "https://github.com/phax/ph-schematron/blob/7475956eed408fb42face4b84684f8d751db0e43/ph-schematron/src/main/java/com/helger/schematron/pure/exchange/PSReader.java#L144-L148", "function_name": "SVRLLocationBeautifierRegistry.getBeautifiedLocation", "nl": "Utility method to get a real attribute value by trimming spaces if the value is non - <code > null< / code > .", "code": "@ Nullable public static String getBeautifiedLocation ( @ Nonnull final String sNamespaceURI , @ Nonnull final String sLocalName ) { for ( final ISVRLLocationBeautifierSPI aBeautifier : s_aList ) { final String sBeautified = aBeautifier . getReplacementText ( sNamespaceURI , sLocalName ) ; if ( sBeautified != null ) return sBeautified ; } if ( LOGGER . isDebugEnabled ( ) ) LOGGER . debug ( \"Unsupported elements for beautification: \" + sNamespaceURI + \" -- \" + sLocalName ) ; return null ; }", "code_fid": 464311, "source_code": "@Nullable\n  public static String getBeautifiedLocation (@Nonnull final String sNamespaceURI, @Nonnull final String sLocalName)\n  {\n    for (final ISVRLLocationBeautifierSPI aBeautifier : s_aList)\n    {\n      final String sBeautified = aBeautifier.getReplacementText (sNamespaceURI, sLocalName);\n      if (sBeautified != null)\n        return sBeautified;\n    }\n    if (LOGGER.isDebugEnabled ())\n      LOGGER.debug (\"Unsupported elements for beautification: \" + sNamespaceURI + \" -- \" + sLocalName);\n    return null;\n  }"}, {"fid": 23, "label": "0", "url": "https://github.com/deib-polimi/SPF2/blob/c5a856ab29116a671fe9bef7035f3efb605dc2a1/sPFApp/src/main/java/it/polimi/spf/app/fragments/profile/ProfileFieldViewFactory.java#L150-L161", "function_name": "ProfileFieldViewFactory.createSpinner", "nl": "Standard display view for all profile fields except tags", "code": "private < E > View createSpinner ( MultipleChoicheProfileField < E > field , E currentValue , FieldValueListener < E > listener , ViewGroup container ) { View result = mInflater . inflate ( R . layout . profileedit_field_multiplechoiche , container , false ) ; String friendlyName = mHelper . getFriendlyNameOfField ( field ) ; ( ( TextView ) result . findViewById ( R . id . profileedit_field_identifier ) ) . setText ( friendlyName ) ; Spinner spinner = ( Spinner ) result . findViewById ( R . id . profileedit_field_multiple_value ) ; ArrayAdapter < E > adapter = new ArrayAdapter < E > ( mContext , android . R . layout . simple_list_item_1 , field . getChoiches ( ) ) ; spinner . setAdapter ( adapter ) ; int index = indexOf ( field . getChoiches ( ) , currentValue ) ; if ( index >= 0 ) { spinner . setSelection ( index , false ) ; } spinner . setOnItemSelectedListener ( new OnItemSelectedAdapter < E > ( field , listener , adapter ) ) ; setUpCircleView ( result , field , listener ) ; return result ; }", "code_fid": 466707, "source_code": "private <E> View createSpinner(MultipleChoicheProfileField<E> field, E currentValue, FieldValueListener<E> listener, ViewGroup container) {\n\t\tView result = mInflater.inflate(R.layout.profileedit_field_multiplechoiche, container, false);\n\n\t\tString friendlyName = mHelper.getFriendlyNameOfField(field);\n\t\t((TextView) result.findViewById(R.id.profileedit_field_identifier)).setText(friendlyName);\n\n\t\tSpinner spinner = (Spinner) result.findViewById(R.id.profileedit_field_multiple_value);\n\t\tArrayAdapter<E> adapter = new ArrayAdapter<E>(mContext, android.R.layout.simple_list_item_1, field.getChoiches());\n\t\tspinner.setAdapter(adapter);\n\n\t\tint index = indexOf(field.getChoiches(), currentValue);\n\t\tif (index >= 0) {\n\t\t\tspinner.setSelection(index, false);\n\t\t}\n\n\t\tspinner.setOnItemSelectedListener(new OnItemSelectedAdapter<E>(field, listener, adapter));\n\t\tsetUpCircleView(result, field, listener);\n\t\treturn result;\n\t}"}, {"fid": 24, "label": "1", "url": "https://github.com/codingapi/tx-lcn/blob/1f95ecd4b845d91c7a5920a1fbfd8f682d6f40a6/txlcn-tc/src/main/java/com/codingapi/txlcn/tc/core/transaction/txc/analy/util/SqlUtils.java#L104-L121", "function_name": "SqlUtils.recordByColumns", "nl": "\u83b7\u53d6\u4fee\u6539\u8bb0\u5f55", "code": "public static ModifiedRecord recordByColumns ( ResultSet rs , List < String > columns ) throws SQLException { ModifiedRecord record = new ModifiedRecord ( ) ; for ( String column : columns ) { FieldValue fieldValue = new FieldValue ( ) ; fieldValue . setFieldName ( column ) ; fieldValue . setTableName ( SqlUtils . tableName ( column ) ) ; fieldValue . setValue ( rs . getObject ( column ) ) ; fieldValue . setValueType ( Objects . isNull ( fieldValue . getValue ( ) ) ? Void . class : fieldValue . getValue ( ) . getClass ( ) ) ; if ( record . getFieldClusters ( ) . get ( fieldValue . getTableName ( ) ) != null ) { record . getFieldClusters ( ) . get ( fieldValue . getTableName ( ) ) . getFields ( ) . add ( fieldValue ) ; } else { FieldCluster fieldCluster = new FieldCluster ( ) ; fieldCluster . getFields ( ) . add ( fieldValue ) ; record . getFieldClusters ( ) . put ( fieldValue . getTableName ( ) , fieldCluster ) ; } } return record ; }", "code_fid": 455851, "source_code": "public static ModifiedRecord recordByColumns(ResultSet rs, List<String> columns) throws SQLException {\n        ModifiedRecord record = new ModifiedRecord();\n        for (String column : columns) {\n            FieldValue fieldValue = new FieldValue();\n            fieldValue.setFieldName(column);\n            fieldValue.setTableName(SqlUtils.tableName(column));\n            fieldValue.setValue(rs.getObject(column));\n            fieldValue.setValueType(Objects.isNull(fieldValue.getValue()) ? Void.class : fieldValue.getValue().getClass());\n            if (record.getFieldClusters().get(fieldValue.getTableName()) != null) {\n                record.getFieldClusters().get(fieldValue.getTableName()).getFields().add(fieldValue);\n            } else {\n                FieldCluster fieldCluster = new FieldCluster();\n                fieldCluster.getFields().add(fieldValue);\n                record.getFieldClusters().put(fieldValue.getTableName(), fieldCluster);\n            }\n        }\n        return record;\n    }"}, {"fid": 25, "label": "0", "url": "https://github.com/kiegroup/optaplanner/blob/b8f1459b4e6b0f7aafe941fd165bff640c11d7d5/optaplanner-core/src/main/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptor.java#L942-L957", "function_name": "SolutionDescriptor.checkIfProblemFactsExist", "nl": "************************************************************************", "code": "public void checkIfProblemFactsExist ( ) { if ( problemFactCollectionMemberAccessorMap . isEmpty ( ) && problemFactMemberAccessorMap . isEmpty ( ) ) { throw new IllegalStateException ( \"The solutionClass (\" + solutionClass + \") must have at least 1 member with a \" + ProblemFactCollectionProperty . class . getSimpleName ( ) + \" annotation or a \" + ProblemFactProperty . class . getSimpleName ( ) + \" annotation\" + \" when used with Drools score calculation.\" ) ; } }", "code_fid": 458913, "source_code": "public void checkIfProblemFactsExist() {\n        if (problemFactCollectionMemberAccessorMap.isEmpty() && problemFactMemberAccessorMap.isEmpty()) {\n            throw new IllegalStateException(\"The solutionClass (\" + solutionClass\n                    + \") must have at least 1 member with a \"\n                    + ProblemFactCollectionProperty.class.getSimpleName() + \" annotation or a \"\n                    + ProblemFactProperty.class.getSimpleName() + \" annotation\"\n                    + \" when used with Drools score calculation.\");\n        }\n    }"}, {"fid": 26, "label": "1", "url": "https://github.com/google/guava/blob/7155d12b70a2406fa84d94d4b8b3bc108e89abfd/android/guava/src/com/google/common/collect/ImmutableRangeSet.java#L383-L387", "function_name": "ImmutableRangeSet.intersection", "nl": "Returns a new range set consisting of the intersection of this range set and { @code other } .", "code": "public ImmutableRangeSet < C > intersection ( RangeSet < C > other ) { RangeSet < C > copy = TreeRangeSet . create ( this ) ; copy . removeAll ( other . complement ( ) ) ; return copyOf ( copy ) ; }", "code_fid": 455685, "source_code": "public ImmutableRangeSet<C> intersection(RangeSet<C> other) {\n    RangeSet<C> copy = TreeRangeSet.create(this);\n    copy.removeAll(other.complement());\n    return copyOf(copy);\n  }"}, {"fid": 27, "label": "1", "url": "https://github.com/microfocus-idol/java-hod-client/blob/56359e5b93a5637c37ef82ce3fc78b95cf1f6d80/src/main/java/com/hp/autonomy/hod/client/config/ResponseParser.java#L80-L88", "function_name": "ResponseParser.unsafeParseResponse", "nl": "Parse the response into a type represented by the JavaType object . Checks for a refreshed token and updates the token repository accordingly . This method does not guarantee that the type parameter T represents the given JavaType . If possible use one of the safe parseResponse methods instead .", "code": "< T > T unsafeParseResponse ( final TokenProxy < ? , ? > tokenProxy , final JavaType type , final Response response ) { checkRefresh ( tokenProxy , response ) ; try { return objectMapper . readValue ( response . getBody ( ) . in ( ) , type ) ; } catch ( final IOException e ) { throw new RuntimeException ( e ) ; } }", "code_fid": 466260, "source_code": "<T> T unsafeParseResponse(final TokenProxy<?, ?> tokenProxy, final JavaType type, final Response response) {\n        checkRefresh(tokenProxy, response);\n\n        try {\n            return objectMapper.readValue(response.getBody().in(), type);\n        } catch (final IOException e) {\n            throw new RuntimeException(e);\n        }\n    }"}, {"fid": 28, "label": "0", "url": "https://github.com/javaparser/javasymbolsolver/blob/e264a20a8c434363a8f224ab259a6baf48d1265a/java-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/typeinference/TypeHelper.java#L396-L404", "function_name": "TypeExtractor.solveDotExpressionType", "nl": "See JLS 5 . 1 . 10 . Capture Conversion .", "code": "private ResolvedType solveDotExpressionType ( ResolvedReferenceTypeDeclaration parentType , FieldAccessExpr node ) { // Fields and internal type declarations cannot have the same name. // Thus, these checks will always be mutually exclusive. if ( parentType . hasField ( node . getName ( ) . getId ( ) ) ) { return parentType . getField ( node . getName ( ) . getId ( ) ) . getType ( ) ; } else if ( parentType . hasInternalType ( node . getName ( ) . getId ( ) ) ) { return new ReferenceTypeImpl ( parentType . getInternalType ( node . getName ( ) . getId ( ) ) , typeSolver ) ; } else { throw new UnsolvedSymbolException ( node . getName ( ) . getId ( ) ) ; } }", "code_fid": 462729, "source_code": "private ResolvedType solveDotExpressionType(ResolvedReferenceTypeDeclaration parentType, FieldAccessExpr node) {\n        // Fields and internal type declarations cannot have the same name.\n        // Thus, these checks will always be mutually exclusive.\n        if (parentType.hasField(node.getName().getId())) {\n            return parentType.getField(node.getName().getId()).getType();\n        } else if (parentType.hasInternalType(node.getName().getId())) {\n            return new ReferenceTypeImpl(parentType.getInternalType(node.getName().getId()), typeSolver);\n        } else {\n            throw new UnsolvedSymbolException(node.getName().getId());\n        }\n    }"}, {"fid": 29, "label": "1", "url": "https://github.com/deib-polimi/SPF2/blob/c5a856ab29116a671fe9bef7035f3efb605dc2a1/sPFWFDMid/src/main/java/it/polimi/spf/wfd/ServiceList.java#L71-L93", "function_name": "ServiceList.addServiceIfNotPresent", "nl": "Method to add a service inside the list in a secure way . The service is added only if isn t already inside the list .", "code": "public void addServiceIfNotPresent ( WiFiP2pService service ) { WfdLog . d ( TAG , \"addServiceIfNotPresent BEGIN, with size = \" + serviceList . size ( ) ) ; if ( service == null ) { WfdLog . e ( TAG , \"Service is null, returning...\" ) ; return ; } boolean add = true ; for ( WiFiP2pService element : serviceList ) { if ( element != null && element . getDevice ( ) . equals ( service . getDevice ( ) ) && element . getInstanceName ( ) . equals ( service . getInstanceName ( ) ) ) { add = false ; //already in the list } } if ( add ) { serviceList . add ( service ) ; } WfdLog . d ( TAG , \"addServiceIfNotPresent END, with size = \" + serviceList . size ( ) ) ; }", "code_fid": 466623, "source_code": "public void addServiceIfNotPresent(WiFiP2pService service) {\n        WfdLog.d(TAG, \"addServiceIfNotPresent BEGIN, with size = \" + serviceList.size());\n\n        if (service == null) {\n            WfdLog.e(TAG, \"Service is null, returning...\");\n            return;\n        }\n\n        boolean add = true;\n        for (WiFiP2pService element : serviceList) {\n            if (element != null\n                    && element.getDevice().equals(service.getDevice())\n                    && element.getInstanceName().equals(service.getInstanceName())) {\n                add = false; //already in the list\n            }\n        }\n\n        if (add) {\n            serviceList.add(service);\n        }\n\n        WfdLog.d(TAG, \"addServiceIfNotPresent END, with size = \" + serviceList.size());\n    }"}, {"fid": 30, "label": "1", "url": "https://github.com/webfirmframework/wff/blob/e59def3a20d44f91e112b113448d951d7514af2e/wffweb/src/main/java/com/webfirmframework/wffweb/tag/html/model/AbstractHtml5SharedObject.java#L292-L300", "function_name": "AbstractHtml5SharedObject.getChildTagRemoveListener", "nl": "NB : - This method is for only for internal use", "code": "public ChildTagRemoveListener getChildTagRemoveListener ( final Object accessObject ) { if ( accessObject == null || ! ( SecurityClassConstants . ABSTRACT_HTML . equals ( accessObject . getClass ( ) . getName ( ) ) ) ) { throw new WffSecurityException ( \"Not allowed to consume this method. This method is for internal use.\" ) ; } return childTagRemoveListener ; }", "code_fid": 464935, "source_code": "public ChildTagRemoveListener getChildTagRemoveListener(\n            final Object accessObject) {\n        if (accessObject == null || !(SecurityClassConstants.ABSTRACT_HTML\n                .equals(accessObject.getClass().getName()))) {\n            throw new WffSecurityException(\n                    \"Not allowed to consume this method. This method is for internal use.\");\n        }\n        return childTagRemoveListener;\n    }"}, {"fid": 31, "label": "0", "url": "https://github.com/XDean/AnnotationProcessorToolkit/blob/0bef3402da93b76c4b06d4d039f90fd7a7da2c56/src/main/java/xdean/annotation/processor/toolkit/XAbstractProcessor.java#L56-L67", "function_name": "XAbstractProcessor.process", "nl": "{", "code": "@ Override public final boolean process ( Set < ? extends TypeElement > annotations , RoundEnvironment roundEnv ) { handleAssert ( ( ) -> processActual ( annotations , roundEnv ) ) ; return false ; }", "code_fid": 466049, "source_code": "@Override\n  public final boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n    handleAssert(() -> processActual(annotations, roundEnv));\n    return false;\n  }"}, {"fid": 32, "label": "0", "url": "https://github.com/ldp4j/ldp4j/blob/4236dfb3a746be390155c1056bbb5a8d4dccc49f/framework/application/engine/sdk/src/main/java/org/ldp4j/application/sdk/internal/PrimitiveObjectFactory.java#L57-L83", "function_name": "PrimitiveObjectFactory.create", "nl": "{", "code": "public static < T > PrimitiveObjectFactory < T > create ( final Class < ? extends T > valueClass ) { checkNotNull ( valueClass , \"Value class cannot be null\" ) ; checkArgument ( valueClass . isPrimitive ( ) , \"Value class '\" + valueClass . getName ( ) + \"' is not primitive\" ) ; return new PrimitiveObjectFactory < T > ( valueClass ) ; }", "code_fid": 468491, "source_code": "public static <T> PrimitiveObjectFactory<T> create(final Class<? extends T> valueClass) {\n\t\tcheckNotNull(valueClass, \"Value class cannot be null\");\n\t\tcheckArgument(valueClass.isPrimitive(), \"Value class '\" + valueClass.getName() + \"' is not primitive\");\n\t\treturn new PrimitiveObjectFactory<T>(valueClass);\n\t}"}, {"fid": 33, "label": "0", "url": "https://github.com/Squarespace/jersey2-guice/blob/08d3e30a89dc3cd27f466391ea17cd404a4d225c/jersey2-guice-impl/src/main/java/com/squarespace/jersey2/guice/JerseyGuiceUtils.java#L235-L277", "function_name": "JerseyGuiceUtils.link", "nl": "Creates and returns a { @link ServiceLocator } .", "code": "public static ServiceLocator link ( ServiceLocator locator , Injector injector ) { Map < Key < ? > , Binding < ? > > bindings = gatherBindings ( injector ) ; Set < Binder > binders = toBinders ( bindings ) ; return link ( locator , injector , binders ) ; }", "code_fid": 466853, "source_code": "public static ServiceLocator link(ServiceLocator locator, Injector injector) {\n    \n    Map<Key<?>, Binding<?>> bindings = gatherBindings(injector);\n    Set<Binder> binders = toBinders(bindings);\n    \n    return link(locator, injector, binders);\n  }"}, {"fid": 34, "label": "1", "url": "https://github.com/Azure/azure-storage-android/blob/2c643c37c6b8c9081058add284c601a2393afc93/microsoft-azure-storage/src/com/microsoft/azure/storage/table/EntityProperty.java#L734-L738", "function_name": "EntityProperty.setValue", "nl": "Sets this { @link EntityProperty } using the serialized <code > Long< / code > value .", "code": "public synchronized final void setValue ( final Long value ) { this . edmType = EdmType . INT64 ; this . type = Long . class ; this . value = value == null ? null : Long . toString ( value ) ; }", "code_fid": 464026, "source_code": "public synchronized final void setValue(final Long value) {\n        this.edmType = EdmType.INT64;\n        this.type = Long.class;\n        this.value = value == null ? null : Long.toString(value);\n    }"}, {"fid": 35, "label": "1", "url": "https://github.com/flow/math/blob/12c1a809720aced976ed22de34fb1457d8eda78f/target/generated-sources/template/com/flowpowered/math/matrix/Matrix4d.java#L691-L693", "function_name": "Matrix4d.createPerspective", "nl": "Creates a perspective projection matrix with the given ( x ) FOV aspect near and far planes", "code": "public static Matrix4d createPerspective ( float fov , float aspect , float near , float far ) { return createPerspective ( ( double ) fov , ( double ) aspect , ( double ) near , ( double ) far ) ; }", "code_fid": 462630, "source_code": "public static Matrix4d createPerspective(float fov, float aspect, float near, float far) {\n        return createPerspective((double) fov, (double) aspect, (double) near, (double) far);\n    }"}, {"fid": 36, "label": "0", "url": "https://github.com/socialize/socialize-sdk-android/blob/23044d66c83718fe5c3f6f4b7b4033ac5b06fbee/sdk/src/com/socialize/oauth/signpost/signature/SignatureBaseString.java#L95-L117", "function_name": "SocializeC2DMReceiverHandler.onMessage", "nl": "Normalizes the set of request parameters this instance was configured with as per OAuth spec section 9 . 1 . 1 .", "code": "@ Override public void onMessage ( Context context , Intent intent ) { try { if ( notificationCallback != null ) { if ( logger != null && logger . isDebugEnabled ( ) ) { logger . debug ( \"SocializeC2DMReceiver received message\" ) ; } Bundle extras = intent . getExtras ( ) ; if ( extras != null ) { notificationCallback . onMessage ( context , extras ) ; } else { logWarn ( \"No extras bundle found in notification intent.  Notification cannot be processed\" ) ; } } else { logWarn ( \"No notificationCallback found in GCM receiver.  Initialization may have failed.\" ) ; } } catch ( Exception e ) { logError ( \"Error processing GCM message\" , e ) ; } }", "code_fid": 467155, "source_code": "@Override\n\tpublic void onMessage(Context context, Intent intent) {\n\t\ttry {\n\t\t\tif(notificationCallback != null) {\n\t\t\t\t\n\t\t\t\tif(logger != null && logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug(\"SocializeC2DMReceiver received message\");\n\t\t\t\t}\n\n\t\t\t\tBundle extras = intent.getExtras();\n\n\t\t\t\tif(extras != null) {\n\t\t\t\t\tnotificationCallback.onMessage(context, extras);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlogWarn(\"No extras bundle found in notification intent.  Notification cannot be processed\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogWarn(\"No notificationCallback found in GCM receiver.  Initialization may have failed.\");\n\t\t\t}\n\t\t} \n\t\tcatch (Exception e) {\n\t\t\tlogError(\"Error processing GCM message\", e);\n\t\t}\n\t}"}, {"fid": 37, "label": "0", "url": "https://github.com/NessComputing/migratory/blob/73ca862e79ee2588f1cc4101cd70b0a8b1c88398/migratory-core/src/main/java/com/nesscomputing/migratory/Migratory.java#L170-L175", "function_name": "Migratory.dbMigrate", "nl": "Run validation on the database . Make sure that all the changes recorded in the database are the same as the ones that should be applied .", "code": "public Map < String , List < MetadataInfo > > dbMigrate ( final MigrationPlan migrationPlan , final MigratoryOption ... options ) throws MigratoryException { init ( ) ; final InternalMigrator migrator = new InternalMigrator ( this ) ; return migrator . migrate ( migrationPlan , options ) ; }", "code_fid": 469547, "source_code": "public Map<String, List<MetadataInfo>> dbMigrate(final MigrationPlan migrationPlan, final MigratoryOption ... options) throws MigratoryException\n    {\n        init();\n        final InternalMigrator migrator = new InternalMigrator(this);\n        return migrator.migrate(migrationPlan, options);\n    }"}, {"fid": 38, "label": "0", "url": "https://github.com/Azure/azure-storage-android/blob/2c643c37c6b8c9081058add284c601a2393afc93/microsoft-azure-storage/src/com/microsoft/azure/storage/table/TableQuery.java#L286-L288", "function_name": "TableQuery.generateFilterCondition", "nl": "Generates a property filter condition string for a <code > double< / code > value . Creates a formatted string to use in a filter expression that uses the specified operation to compare the property with the value formatted as a double value as in the following example : <p > <code > String condition = generateFilterCondition ( Circumference QueryComparisons . EQUAL 2 * 3 . 141592 ) ; < / code > <p > This statement sets <code > condition< / code > to the following value : <p > <code > Circumference eq 6 . 283184< / code >", "code": "public static String generateFilterCondition ( String propertyName , String operation , final Date value ) { return generateFilterCondition ( propertyName , operation , Utility . getJavaISO8601Time ( value ) , EdmType . DATE_TIME ) ; }", "code_fid": 463707, "source_code": "public static String generateFilterCondition(String propertyName, String operation, final Date value) {\n        return generateFilterCondition(propertyName, operation,\n                Utility.getJavaISO8601Time(value), EdmType.DATE_TIME);\n    }"}, {"fid": 39, "label": "1", "url": "https://github.com/google/guava/blob/7155d12b70a2406fa84d94d4b8b3bc108e89abfd/android/guava/src/com/google/common/graph/EndpointPair.java#L68-L70", "function_name": "EndpointPair.of", "nl": "Returns an {", "code": "static < N > EndpointPair < N > of ( Network < ? , ? > network , N nodeU , N nodeV ) { return network . isDirected ( ) ? ordered ( nodeU , nodeV ) : unordered ( nodeU , nodeV ) ; }", "code_fid": 454655, "source_code": "static <N> EndpointPair<N> of(Network<?, ?> network, N nodeU, N nodeV) {\n    return network.isDirected() ? ordered(nodeU, nodeV) : unordered(nodeU, nodeV);\n  }"}, {"fid": 40, "label": "0", "url": "https://github.com/Hack23/cia/blob/223312ca0eec74888a57a060de5b164f95a7785f/citizen-intelligence-agency/src/main/java/com/hack23/cia/web/impl/ui/application/views/common/chartfactory/impl/AbstractChartDataManagerImpl.java#L117-L148", "function_name": "AbstractChartDataManagerImpl.getChartWindowHeight", "nl": "Adds the chart .", "code": "private static int getChartWindowHeight ( final boolean fullPage ) { if ( fullPage ) { return Math . max ( ( int ) ( Page . getCurrent ( ) . getBrowserWindowHeight ( ) * HEIGHT_PERCENTAGE_FULL_PAGE ) , MINIMUM_CHART_HEIGHT_FULL_PAGE ) ; } else { return Math . max ( ( int ) ( Page . getCurrent ( ) . getBrowserWindowHeight ( ) * HEIGHT_PERCETAGE_HALF_PAGE ) , NINIMUM_CHART_HEIGHT_HALF_PAGE ) ; } }", "code_fid": 461129, "source_code": "private static int getChartWindowHeight(final boolean fullPage) {\n\t\tif (fullPage) {\n\t\t\treturn Math.max((int) (Page.getCurrent().getBrowserWindowHeight() * HEIGHT_PERCENTAGE_FULL_PAGE) ,MINIMUM_CHART_HEIGHT_FULL_PAGE);\n\t\t} else {\n\t\t\treturn Math.max((int) (Page.getCurrent().getBrowserWindowHeight() * HEIGHT_PERCETAGE_HALF_PAGE),NINIMUM_CHART_HEIGHT_HALF_PAGE);\n\t\t}\n\t}"}, {"fid": 41, "label": "1", "url": "https://github.com/clockbyte/admobadapter/blob/ea5407dbc3c2a00f5608f410469bfb34737f3c07/admobadapter/src/main/java/com/clockbyte/admobadapter/AdmobAdapterCalculator.java#L77-L85", "function_name": "AdmobAdapterCalculator.getAdsCountToPublish", "nl": "Gets the count of ads that could be published", "code": "public int getAdsCountToPublish ( int fetchedAdsCount , int sourceItemsCount ) { if ( fetchedAdsCount <= 0 || getNoOfDataBetweenAds ( ) <= 0 ) return 0 ; int expected = 0 ; if ( sourceItemsCount > 0 && sourceItemsCount >= getOffsetValue ( ) + 1 ) expected = ( sourceItemsCount - getOffsetValue ( ) ) / getNoOfDataBetweenAds ( ) + 1 ; expected = Math . max ( 0 , expected ) ; expected = Math . min ( fetchedAdsCount , expected ) ; return Math . min ( expected , getLimitOfAds ( ) ) ; }", "code_fid": 465232, "source_code": "public int getAdsCountToPublish(int fetchedAdsCount, int sourceItemsCount){\n        if(fetchedAdsCount <= 0 || getNoOfDataBetweenAds() <= 0) return 0;\n        int expected = 0;\n        if(sourceItemsCount > 0 && sourceItemsCount >= getOffsetValue()+1)\n            expected = (sourceItemsCount - getOffsetValue()) / getNoOfDataBetweenAds() + 1;\n        expected = Math.max(0, expected);\n        expected = Math.min(fetchedAdsCount, expected);\n        return Math.min(expected, getLimitOfAds());\n    }"}, {"fid": 42, "label": "1", "url": "https://github.com/google/guava/blob/7155d12b70a2406fa84d94d4b8b3bc108e89abfd/android/guava/src/com/google/common/primitives/Floats.java#L651-L666", "function_name": "Floats.tryParse", "nl": "Parses the specified string as a single - precision floating point value . The ASCII character { @code - } ( <code > &#92 ; u002D < / code > ) is recognized as the minus sign .", "code": "@ Beta @ GwtIncompatible // regular expressions @ NullableDecl public static Float tryParse ( String string ) { if ( Doubles . FLOATING_POINT_PATTERN . matcher ( string ) . matches ( ) ) { // TODO(lowasser): could be potentially optimized, but only with // extensive testing try { return Float . parseFloat ( string ) ; } catch ( NumberFormatException e ) { // Float.parseFloat has changed specs several times, so fall through // gracefully } } return null ; }", "code_fid": 455199, "source_code": "@Beta\n  @GwtIncompatible // regular expressions\n  @NullableDecl\n  public static Float tryParse(String string) {\n    if (Doubles.FLOATING_POINT_PATTERN.matcher(string).matches()) {\n      // TODO(lowasser): could be potentially optimized, but only with\n      // extensive testing\n      try {\n        return Float.parseFloat(string);\n      } catch (NumberFormatException e) {\n        // Float.parseFloat has changed specs several times, so fall through\n        // gracefully\n      }\n    }\n    return null;\n  }"}, {"fid": 43, "label": "0", "url": "https://github.com/reactor/reactor-core/blob/df2eba4ab7d2393e1a942ce972c3307fbbd47ff9/reactor-core/src/main/java/reactor/core/publisher/Flux.java#L953-L961", "function_name": "Flux.from", "nl": "Create a { @link Flux } that emits the items contained in the provided array . <p > <img class = marble src = doc - files / marbles / fromArray . svg alt = >", "code": "public static < T > Flux < T > from ( Publisher < ? extends T > source ) { if ( source instanceof Flux ) { @ SuppressWarnings ( \"unchecked\" ) Flux < T > casted = ( Flux < T > ) source ; return casted ; } if ( source instanceof Fuseable . ScalarCallable ) { try { @ SuppressWarnings ( \"unchecked\" ) T t = ( ( Fuseable . ScalarCallable < T > ) source ) . call ( ) ; if ( t != null ) { return just ( t ) ; } return empty ( ) ; } catch ( Exception e ) { return error ( e ) ; } } return wrap ( source ) ; }", "code_fid": 455953, "source_code": "public static <T> Flux<T> from(Publisher<? extends T> source) {\n\t\tif (source instanceof Flux) {\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tFlux<T> casted = (Flux<T>) source;\n\t\t\treturn casted;\n\t\t}\n\n\t\tif (source instanceof Fuseable.ScalarCallable) {\n\t\t\ttry {\n\t\t\t\t@SuppressWarnings(\"unchecked\") T t =\n\t\t\t\t\t\t((Fuseable.ScalarCallable<T>) source).call();\n\t\t\t\tif (t != null) {\n\t\t\t\t\treturn just(t);\n\t\t\t\t}\n\t\t\t\treturn empty();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\treturn error(e);\n\t\t\t}\n\t\t}\n\t\treturn wrap(source);\n\t}"}, {"fid": 44, "label": "1", "url": "https://github.com/reactor/reactor-core/blob/df2eba4ab7d2393e1a942ce972c3307fbbd47ff9/reactor-core/src/main/java/reactor/core/publisher/Flux.java#L7332-L7335", "function_name": "Flux.scanWith", "nl": "Reduce this { @link Flux } values with the help of an accumulator { @link BiFunction } and also emits the intermediate results . A seed value is lazily provided by a { @link Supplier } invoked for each { @link Subscriber } . <p > The accumulation works as follows : <pre > <code > result [ 0 ] = initialValue ; result [ 1 ] = accumulator ( result [ 0 ] source [ 0 ] ) result [ 2 ] = accumulator ( result [ 1 ] source [ 1 ] ) result [ 3 ] = accumulator ( result [ 2 ] source [ 2 ] ) ... < / code > < / pre >", "code": "public final < A > Flux < A > scanWith ( Supplier < A > initial , BiFunction < A , ? super T , A > accumulator ) { return onAssembly ( new FluxScanSeed <> ( this , initial , accumulator ) ) ; }", "code_fid": 456137, "source_code": "public final <A> Flux<A> scanWith(Supplier<A> initial, BiFunction<A, ? super T, A>\n\t\t\taccumulator) {\n\t\treturn onAssembly(new FluxScanSeed<>(this, initial, accumulator));\n\t}"}, {"fid": 45, "label": "0", "url": "https://github.com/michael-borkowski/spiceJ/blob/c1d4f1170199efc7769e68bd9b853e1c53c9a99d/spiceJ/core/src/main/java/at/borkowski/spicej/streams/RateHelper.java#L80-L88", "function_name": "SleepWakeup.sleep", "nl": "Takes one thing ( eg . byte ) . This method blocks until one thing can be used according to the current rate and prescaling settings .", "code": "public static void sleep ( int ms ) { long deadline = System . currentTimeMillis ( ) + ms ; while ( System . currentTimeMillis ( ) < deadline ) { try { Thread . sleep ( Math . max ( 1 , ( deadline - System . currentTimeMillis ( ) ) / 2 ) ) ; } catch ( InterruptedException ignore ) { } } }", "code_fid": 468559, "source_code": "public static void sleep(int ms) {\n      long deadline = System.currentTimeMillis() + ms;\n      while (System.currentTimeMillis() < deadline) {\n         try {\n            Thread.sleep(Math.max(1, (deadline - System.currentTimeMillis()) / 2));\n         } catch (InterruptedException ignore) {}\n      }\n   }"}, {"fid": 46, "label": "1", "url": "https://github.com/phax/ph-schematron/blob/7475956eed408fb42face4b84684f8d751db0e43/ph-schematron/src/main/java/com/helger/schematron/pure/preprocess/PSPreprocessor.java#L502-L548", "function_name": "PSPreprocessor.getForcedPreprocessedSchema", "nl": "Convert the passed schema to a pre - processed schema independent if it is already minimal or not .", "code": "@ Nullable public PSSchema getForcedPreprocessedSchema ( @ Nonnull final PSSchema aSchema ) throws SchematronPreprocessException { ValueEnforcer . notNull ( aSchema , \"Schema\" ) ; final PreprocessorLookup aLookup = new PreprocessorLookup ( aSchema ) ; final PreprocessorIDPool aIDPool = new PreprocessorIDPool ( ) ; final PSSchema ret = new PSSchema ( aSchema . getResource ( ) ) ; ret . setID ( aIDPool . getUniqueID ( aSchema . getID ( ) ) ) ; ret . setRich ( aSchema . getRichClone ( ) ) ; ret . setSchemaVersion ( aSchema . getSchemaVersion ( ) ) ; ret . setDefaultPhase ( aSchema . getDefaultPhase ( ) ) ; ret . setQueryBinding ( aSchema . getQueryBinding ( ) ) ; if ( m_bKeepTitles && aSchema . hasTitle ( ) ) ret . setTitle ( aSchema . getTitle ( ) . getClone ( ) ) ; if ( aSchema . hasAnyInclude ( ) ) throw new SchematronPreprocessException ( \"Cannot preprocess <schema> with an <include>\" ) ; for ( final PSNS aNS : aSchema . getAllNSs ( ) ) ret . addNS ( aNS . getClone ( ) ) ; // start ps are skipped for ( final PSLet aLet : aSchema . getAllLets ( ) ) ret . addLet ( aLet . getClone ( ) ) ; for ( final PSPhase aPhase : aSchema . getAllPhases ( ) ) ret . addPhase ( _getPreprocessedPhase ( aPhase , aIDPool ) ) ; for ( final PSPattern aPattern : aSchema . getAllPatterns ( ) ) { final PSPattern aMinifiedPattern = _getPreprocessedPattern ( aPattern , aLookup , aIDPool ) ; if ( aMinifiedPattern != null ) { // Pattern without rules? if ( aMinifiedPattern . getRuleCount ( ) > 0 || m_bKeepEmptyPatterns ) ret . addPattern ( aMinifiedPattern ) ; } } // Schema without patterns? if ( aSchema . getPatternCount ( ) == 0 && ! m_bKeepEmptySchema ) return null ; // end ps are skipped if ( m_bKeepDiagnostics && aSchema . hasDiagnostics ( ) ) ret . setDiagnostics ( _getPreprocessedDiagnostics ( aSchema . getDiagnostics ( ) ) ) ; ret . addForeignElements ( aSchema . getAllForeignElements ( ) ) ; ret . addForeignAttributes ( aSchema . getAllForeignAttributes ( ) ) ; return ret ; }", "code_fid": 464251, "source_code": "@Nullable\n  public PSSchema getForcedPreprocessedSchema (@Nonnull final PSSchema aSchema) throws SchematronPreprocessException\n  {\n    ValueEnforcer.notNull (aSchema, \"Schema\");\n\n    final PreprocessorLookup aLookup = new PreprocessorLookup (aSchema);\n    final PreprocessorIDPool aIDPool = new PreprocessorIDPool ();\n\n    final PSSchema ret = new PSSchema (aSchema.getResource ());\n    ret.setID (aIDPool.getUniqueID (aSchema.getID ()));\n    ret.setRich (aSchema.getRichClone ());\n    ret.setSchemaVersion (aSchema.getSchemaVersion ());\n    ret.setDefaultPhase (aSchema.getDefaultPhase ());\n    ret.setQueryBinding (aSchema.getQueryBinding ());\n    if (m_bKeepTitles && aSchema.hasTitle ())\n      ret.setTitle (aSchema.getTitle ().getClone ());\n    if (aSchema.hasAnyInclude ())\n      throw new SchematronPreprocessException (\"Cannot preprocess <schema> with an <include>\");\n    for (final PSNS aNS : aSchema.getAllNSs ())\n      ret.addNS (aNS.getClone ());\n    // start ps are skipped\n    for (final PSLet aLet : aSchema.getAllLets ())\n      ret.addLet (aLet.getClone ());\n    for (final PSPhase aPhase : aSchema.getAllPhases ())\n      ret.addPhase (_getPreprocessedPhase (aPhase, aIDPool));\n    for (final PSPattern aPattern : aSchema.getAllPatterns ())\n    {\n      final PSPattern aMinifiedPattern = _getPreprocessedPattern (aPattern, aLookup, aIDPool);\n      if (aMinifiedPattern != null)\n      {\n        // Pattern without rules?\n        if (aMinifiedPattern.getRuleCount () > 0 || m_bKeepEmptyPatterns)\n          ret.addPattern (aMinifiedPattern);\n      }\n    }\n\n    // Schema without patterns?\n    if (aSchema.getPatternCount () == 0 && !m_bKeepEmptySchema)\n      return null;\n\n    // end ps are skipped\n    if (m_bKeepDiagnostics && aSchema.hasDiagnostics ())\n      ret.setDiagnostics (_getPreprocessedDiagnostics (aSchema.getDiagnostics ()));\n    ret.addForeignElements (aSchema.getAllForeignElements ());\n    ret.addForeignAttributes (aSchema.getAllForeignAttributes ());\n    return ret;\n  }"}, {"fid": 47, "label": "0", "url": "https://github.com/airbnb/RxGroups/blob/9478b5ea52e7926173d742b61d0cb24b05082ff9/rxgroups/src/main/java/com/airbnb/rxgroups/ObservableGroup.java#L159-L161", "function_name": "ObservableGroup.transform", "nl": "Transforms an existing {", "code": "public < T > ObservableTransformer < ? super T , T > transform ( Observer < ? super T > observer , String observableTag ) { return new GroupSubscriptionTransformer <> ( this , Utils . getObserverTag ( observer ) , observableTag ) ; }", "code_fid": 462219, "source_code": "public <T> ObservableTransformer<? super T, T> transform(Observer<? super T> observer,\n      String observableTag) {\n    return new GroupSubscriptionTransformer<>(this, Utils.getObserverTag(observer),\n        observableTag);\n  }"}, {"fid": 48, "label": "1", "url": "https://github.com/gquintana/metrics-sql/blob/1f7966be77007cd99c383009e373c140aecd8ac7/src/main/java/com/github/gquintana/metrics/sql/MetricHelper.java#L79-L83", "function_name": "MetricHelper.startStatementExecuteTimer", "nl": "Start Timer when statement is executed", "code": "public Timer . Context startStatementExecuteTimer ( Query query ) { ensureSqlId ( query ) ; String name = metricNamingStrategy . getStatementExecuteTimer ( query . getSql ( ) , query . getSqlId ( ) ) ; return startTimer ( name ) ; }", "code_fid": 467842, "source_code": "public Timer.Context startStatementExecuteTimer(Query query) {\n        ensureSqlId(query);\n        String name = metricNamingStrategy.getStatementExecuteTimer(query.getSql(), query.getSqlId());\n        return startTimer(name);\n    }"}, {"fid": 49, "label": "0", "url": "https://github.com/deib-polimi/SPF2/blob/c5a856ab29116a671fe9bef7035f3efb605dc2a1/sPFFramework/src/main/java/it/polimi/spf/framework/SPF.java#L268-L270", "function_name": "ProfileFieldContainer.getFieldValue", "nl": "TODO this class should handle only components life - cycle move search primitives elsewhere", "code": "public < E > E getFieldValue ( ProfileField < E > field ) { if ( field == null ) { throw new NullPointerException ( ) ; } String val = mFields . getString ( field . getIdentifier ( ) ) ; return val == null ? null : ProfileFieldConverter . forField ( field ) . fromStorageString ( val ) ; }", "code_fid": 466819, "source_code": "public <E> E getFieldValue(ProfileField<E> field) {\n        if (field == null) {\n            throw new NullPointerException();\n        }\n\n        String val = mFields.getString(field.getIdentifier());\n        return val == null ? null : ProfileFieldConverter.forField(field).fromStorageString(val);\n    }"}, {"fid": 50, "label": "1", "url": "https://github.com/OryxProject/oryx/blob/684bac0af002d2619ced652b5339e239da48df93/app/oryx-app-common/src/main/java/com/cloudera/oryx/app/als/ALSUtils.java#L37-L59", "function_name": "ALSUtils.computeTargetQui", "nl": "Computes how the estimated strength of interaction in the model should change -- to what target value -- in response to a new interaction .", "code": "public static double computeTargetQui ( boolean implicit , double value , double currentValue ) { // We want Qui to change based on value. What's the target value, Qui'? if ( implicit ) { // Target is really 1, or 0, depending on whether value is positive or negative. // This wouldn't account for the strength though. Instead the target is a function // of the current value and strength. If the current value is c, and value is positive // then the target is somewhere between c and 1 depending on the strength. If current // value is already >= 1, there's no effect. Similarly for negative values. if ( value > 0.0f && currentValue < 1.0 ) { double diff = 1.0 - Math . max ( 0.0 , currentValue ) ; return currentValue + ( value / ( 1.0 + value ) ) * diff ; } if ( value < 0.0f && currentValue > 0.0 ) { double diff = - Math . min ( 1.0 , currentValue ) ; return currentValue + ( value / ( value - 1.0 ) ) * diff ; } // No change return Double . NaN ; } else { // Non-implicit -- value is supposed to be the new value return value ; } }", "code_fid": 460018, "source_code": "public static double computeTargetQui(boolean implicit, double value, double currentValue) {\n    // We want Qui to change based on value. What's the target value, Qui'?\n    if (implicit) {\n      // Target is really 1, or 0, depending on whether value is positive or negative.\n      // This wouldn't account for the strength though. Instead the target is a function\n      // of the current value and strength. If the current value is c, and value is positive\n      // then the target is somewhere between c and 1 depending on the strength. If current\n      // value is already >= 1, there's no effect. Similarly for negative values.\n      if (value > 0.0f && currentValue < 1.0) {\n        double diff = 1.0 - Math.max(0.0, currentValue);\n        return currentValue + (value / (1.0 + value)) * diff;\n      }\n      if (value < 0.0f && currentValue > 0.0) {\n        double diff = -Math.min(1.0, currentValue);\n        return currentValue + (value / (value - 1.0)) * diff;\n      }\n      // No change\n      return Double.NaN;\n    } else {\n      // Non-implicit -- value is supposed to be the new value\n      return value;\n    }\n  }"}, {"fid": 51, "label": "0", "url": "https://github.com/mdeverdelhan/ta4j-origins/blob/0441468c09cfd98754497cd9c0f1da9cf70fc4b9/ta4j-examples/src/main/java/ta4jexamples/walkforward/WalkForward.java#L59-L89", "function_name": "PeriodicalGrowthRateIndicator.getTotalReturn", "nl": "Builds a list of split indexes from splitDuration .", "code": "public double getTotalReturn ( ) { Decimal totalProduct = Decimal . ONE ; int completeTimeframes = ( getTimeSeries ( ) . getTickCount ( ) / timeFrame ) ; for ( int i = 1 ; i <= completeTimeframes ; i ++ ) { int index = i * timeFrame ; Decimal currentReturn = getValue ( index ) ; // Skip NaN at the end of a series if ( currentReturn != Decimal . NaN ) { currentReturn = currentReturn . plus ( Decimal . ONE ) ; totalProduct = totalProduct . multipliedBy ( currentReturn ) ; } } return ( Math . pow ( totalProduct . toDouble ( ) , ( 1.0 / completeTimeframes ) ) ) ; }", "code_fid": 462187, "source_code": "public double getTotalReturn() {\n\n        Decimal totalProduct = Decimal.ONE;\n        int completeTimeframes = (getTimeSeries().getTickCount() / timeFrame);\n\n        for (int i = 1; i <= completeTimeframes; i++) {\n            int index = i * timeFrame;\n            Decimal currentReturn = getValue(index);\n\n            // Skip NaN at the end of a series\n            if (currentReturn != Decimal.NaN) {\n                currentReturn = currentReturn.plus(Decimal.ONE);\n                totalProduct = totalProduct.multipliedBy(currentReturn);\n            }\n        }\n\n        return (Math.pow(totalProduct.toDouble(), (1.0 / completeTimeframes)));\n    }"}, {"fid": 52, "label": "0", "url": "https://github.com/jReddit/jReddit/blob/ac0b518f190c30228e401ef66d53329bbd27bad6/src/main/java/com/github/jreddit/parser/listing/RedditListingParser.java#L93-L157", "function_name": "RedditListingParser.parseThing", "nl": "Parse JSON received from reddit into a list of things . This parser expects the JSON to be of a listing of things and supports the following things : <i > More< / i > <i > Comment< / i > <i > Submission< / i > and <i > Subreddit< / i > . <br > <br > <i > Note : if it encounters an invalid element ( e . g . missing kind or data ) it will log a warning using SLF4J and would return null . < / i >", "code": "private Thing parseThing ( Kind kind , JSONObject data ) { // For a comment if ( kind == Kind . COMMENT ) { return new Comment ( data ) ; // For a submission } else if ( kind == Kind . LINK ) { return new Submission ( data ) ; // For a subreddit } else if ( kind == Kind . SUBREDDIT ) { return new Subreddit ( data ) ; // For a more } else if ( kind == Kind . MORE ) { return new More ( data ) ; // In all other cases (null, or of a different type) } else { return null ; } }", "code_fid": 462053, "source_code": "private Thing parseThing(Kind kind, JSONObject data) {\n        \n        // For a comment\n        if (kind == Kind.COMMENT) { \n            return new Comment(data);\n            \n        // For a submission\n        } else if (kind == Kind.LINK) {\n            return new Submission(data);\n        \n        // For a subreddit\n        } else if (kind == Kind.SUBREDDIT) { \n            return new Subreddit(data);\n          \n        // For a more\n        } else if (kind == Kind.MORE) { \n            return new More(data);\n            \n        // In all other cases (null, or of a different type)\n        } else {\n            return null;\n        }\n        \n    }"}, {"fid": 53, "label": "0", "url": "https://github.com/eFaps/eFaps-WebApp/blob/785c1aba0860dd65c673f123214fbe8c24ebdb17/src/main/java/org/efaps/ui/wicket/models/field/factories/LinkWithRangesUIFactory.java#L58-L69", "function_name": "EFapsApplication.launch", "nl": "{", "code": "public ExecutionBridge launch ( final IJob _job , final String _jobName ) throws EFapsException { // we are on WEB thread so services should be normally injected. final ExecutionBridge bridge = new ExecutionBridge ( ) ; // register bridge on session if ( _jobName == null ) { bridge . setJobName ( \"EFapsJob-\" + EFapsSession . get ( ) . countJobs ( ) + 1 + \"-\" + RandomUtil . randomAlphanumeric ( 4 ) ) ; } else { bridge . setJobName ( _jobName ) ; } bridge . setJobContext ( new JobContext ( ) . setUserName ( Context . getThreadContext ( ) . getPerson ( ) . getName ( ) ) . setLocale ( Context . getThreadContext ( ) . getLocale ( ) ) . setCompanyUUID ( Context . getThreadContext ( ) . getCompany ( ) . getUUID ( ) ) ) ; EFapsSession . get ( ) . addExecutionBridge ( bridge ) ; // run the task this . executorService . execute ( new JobRunnable ( _job , bridge ) ) ; return bridge ; }", "code_fid": 466235, "source_code": "public ExecutionBridge launch(final IJob _job,\n                                  final String _jobName)\n        throws EFapsException\n    {\n        // we are on WEB thread so services should be normally injected.\n        final ExecutionBridge bridge = new ExecutionBridge();\n        // register bridge on session\n        if (_jobName == null) {\n            bridge.setJobName(\"EFapsJob-\" + EFapsSession.get().countJobs() + 1 + \"-\"\n                            + RandomUtil.randomAlphanumeric(4));\n        } else {\n            bridge.setJobName(_jobName);\n        }\n        bridge.setJobContext(new JobContext().setUserName(Context.getThreadContext().getPerson().getName()).setLocale(\n                        Context.getThreadContext().getLocale()).setCompanyUUID(Context.getThreadContext().getCompany()\n                                        .getUUID()));\n\n        EFapsSession.get().addExecutionBridge(bridge);\n        // run the task\n        this.executorService.execute(new JobRunnable(_job, bridge));\n        return bridge;\n    }"}, {"fid": 54, "label": "0", "url": "https://github.com/plume-lib/bcel-util/blob/29adb7dd273398df7d0a7abbcd85b1c85e207a0e/src/main/java/org/plumelib/bcelutil/InstructionListUtils.java#L247-L261", "function_name": "InstructionListUtils.build_il", "nl": "Print a BCEL instruction list to the debug_instrument log .", "code": "protected final InstructionList build_il ( Instruction ... instructions ) { InstructionList il = new InstructionList ( ) ; for ( Instruction inst : instructions ) { append_inst ( il , inst ) ; } return il ; }", "code_fid": 465177, "source_code": "protected final InstructionList build_il(Instruction... instructions) {\n    InstructionList il = new InstructionList();\n    for (Instruction inst : instructions) {\n      append_inst(il, inst);\n    }\n    return il;\n  }"}, {"fid": 55, "label": "0", "url": "https://github.com/liquibase/liquibase/blob/86a3b30fa6821ac981056f252f918557f5ebcc60/liquibase-core/src/main/java/liquibase/util/csv/opencsv/bean/AbstractCSVToBean.java#L45-L53", "function_name": "AbstractCSVToBean.checkForTrim", "nl": "Convert a string value to its Object value .", "code": "protected String checkForTrim ( String s , PropertyDescriptor prop ) { return trimmableProperty ( prop ) ? s . trim ( ) : s ; }", "code_fid": 458321, "source_code": "protected String checkForTrim(String s, PropertyDescriptor prop) {\n        return trimmableProperty(prop) ? s.trim() : s;\n    }"}, {"fid": 56, "label": "0", "url": "https://github.com/OWASP/owasp-java-encoder/blob/bc9a85723f3c1b4819d9aa8aa1b539787128e4ea/core/src/main/java/org/owasp/encoder/HTMLEncoder.java#L250-L253", "function_name": "Encoders.forName", "nl": "Appends a source array verbatim to the output array . Caller must insure there is enough space in the array for the output .", "code": "public static Encoder forName ( String contextName ) throws NullPointerException , UnsupportedContextException { if ( contextName == null ) { throw new NullPointerException ( ) ; } Encoder encoder = ENCODERS_MAP . get ( contextName ) ; if ( encoder == null ) { throw new UnsupportedContextException ( contextName ) ; } return encoder ; }", "code_fid": 464387, "source_code": "public static Encoder forName(String contextName) throws NullPointerException, UnsupportedContextException {\n        if (contextName == null) {\n            throw new NullPointerException();\n        }\n        Encoder encoder = ENCODERS_MAP.get(contextName);\n        if (encoder == null) {\n            throw new UnsupportedContextException(contextName);\n        }\n        return encoder;\n    }"}, {"fid": 57, "label": "0", "url": "https://github.com/conveyal/gtfs-lib/blob/ba9e19563af9f52d4eb0eac60327d9f39ebd19f7/src/main/java/com/conveyal/gtfs/error/ReferentialIntegrityError.java#L18-L23", "function_name": "GeoUtils.getEPSGCodefromUTS", "nl": "must be comparable to put into mapdb", "code": "@ Deprecated public static int getEPSGCodefromUTS ( Coordinate refLonLat ) { // define base EPSG code value of all UTM zones; int epsg_code = 32600 ; // add 100 for all zones in southern hemisphere if ( refLonLat . y < 0 ) { epsg_code += 100 ; } // finally, add zone number to code epsg_code += getUTMZoneForLongitude ( refLonLat . x ) ; return epsg_code ; }", "code_fid": 462331, "source_code": "@Deprecated\n  public static int\n      getEPSGCodefromUTS(Coordinate refLonLat) {\n    // define base EPSG code value of all UTM zones;\n    int epsg_code = 32600;\n    // add 100 for all zones in southern hemisphere\n    if (refLonLat.y < 0) {\n      epsg_code += 100;\n    }\n    // finally, add zone number to code\n    epsg_code += getUTMZoneForLongitude(refLonLat.x);\n\n    return epsg_code;\n  }"}, {"fid": 58, "label": "1", "url": "https://github.com/conveyal/gtfs-lib/blob/ba9e19563af9f52d4eb0eac60327d9f39ebd19f7/src/main/java/com/conveyal/gtfs/loader/Table.java#L542-L549", "function_name": "Table.commaSeparatedNames", "nl": "Prepend a prefix string to each field and join them with a comma + space separator . Also if an export to GTFS is being performed certain fields need a translation from the database format to the GTFS format . Otherwise the fields are assumed to be asked in order to do a database - to - database export and so the verbatim values of the fields are needed .", "code": "public static String commaSeparatedNames ( List < Field > fieldsToJoin , String prefix , boolean csvOutput ) { return fieldsToJoin . stream ( ) // NOTE: This previously only prefixed fields that were foreign refs or key fields. However, this // caused an issue where shared fields were ambiguously referenced in a select query (specifically, // wheelchair_accessible in routes and trips). So this filter has been removed. . map ( f -> f . getColumnExpression ( prefix , csvOutput ) ) . collect ( Collectors . joining ( \", \" ) ) ; }", "code_fid": 462390, "source_code": "public static String commaSeparatedNames(List<Field> fieldsToJoin, String prefix, boolean csvOutput) {\n        return fieldsToJoin.stream()\n                // NOTE: This previously only prefixed fields that were foreign refs or key fields. However, this\n                // caused an issue where shared fields were ambiguously referenced in a select query (specifically,\n                // wheelchair_accessible in routes and trips). So this filter has been removed.\n                .map(f -> f.getColumnExpression(prefix, csvOutput))\n                .collect(Collectors.joining(\", \"));\n    }"}, {"fid": 59, "label": "1", "url": "https://github.com/auth0/Lock-Google.Android/blob/9beef3203d292c435d205fb2128a20c07dc7701b/lock-google/src/main/java/com/auth0/android/google/GoogleAPI.java#L179-L192", "function_name": "GoogleAPI.logout", "nl": "Logs out the current signed in account .", "code": "void logout ( ) { try { Auth . GoogleSignInApi . signOut ( client ) . setResultCallback ( new ResultCallback < Status > ( ) { @ Override public void onResult ( @ NonNull Status status ) { if ( ! status . isSuccess ( ) ) { Log . w ( TAG , \"Couldn't clear account and credentials\" ) ; } } } ) ; } catch ( IllegalStateException e ) { Log . e ( TAG , \"Failed to clear the Google Plus Session\" , e ) ; } }", "code_fid": 465793, "source_code": "void logout() {\n        try {\n            Auth.GoogleSignInApi.signOut(client).setResultCallback(new ResultCallback<Status>() {\n                @Override\n                public void onResult(@NonNull Status status) {\n                    if (!status.isSuccess()) {\n                        Log.w(TAG, \"Couldn't clear account and credentials\");\n                    }\n                }\n            });\n        } catch (IllegalStateException e) {\n            Log.e(TAG, \"Failed to clear the Google Plus Session\", e);\n        }\n    }"}, {"fid": 60, "label": "1", "url": "https://github.com/lemire/javaewah/blob/ff04f8eb03eb1193842cf8009d0e94c5d2e3e70e/src/main/java/com/googlecode/javaewah/datastructure/PriorityQ.java#L117-L122", "function_name": "PriorityQ.poll", "nl": "Remove the element on top of the heap", "code": "public T poll ( ) { T ans = this . a [ 1 ] ; this . a [ 1 ] = this . a [ this . lastIndex -- ] ; percolateDown ( 1 ) ; return ans ; }", "code_fid": 460705, "source_code": "public T poll() {\n        T ans = this.a[1];\n        this.a[1] = this.a[this.lastIndex--];\n        percolateDown(1);\n        return ans;\n    }"}, {"fid": 61, "label": "0", "url": "https://github.com/reactor/reactor-core/blob/df2eba4ab7d2393e1a942ce972c3307fbbd47ff9/reactor-core/src/main/java/reactor/core/Exceptions.java#L245-L250", "function_name": "Exceptions.multiple", "nl": "Return a new { @link RejectedExecutionException } with standard message and cause unless the { @code cause } is already a { @link RejectedExecutionException } created via { @link #failWithRejected ( Throwable ) } ( not the singleton - producing variants ) .", "code": "public static RuntimeException multiple ( Iterable < Throwable > throwables ) { RuntimeException multiple = new RuntimeException ( \"Multiple exceptions\" ) ; //noinspection ConstantConditions if ( throwables != null ) { for ( Throwable t : throwables ) { //this is ok, multiple is always a new non-singleton instance multiple . addSuppressed ( t ) ; } } return multiple ; }", "code_fid": 456495, "source_code": "public static RuntimeException multiple(Iterable<Throwable> throwables) {\n\t\tRuntimeException multiple = new RuntimeException(\"Multiple exceptions\");\n\t\t//noinspection ConstantConditions\n\t\tif (throwables != null) {\n\t\t\tfor (Throwable t : throwables) {\n\t\t\t\t//this is ok, multiple is always a new non-singleton instance\n\t\t\t\tmultiple.addSuppressed(t);\n\t\t\t}\n\t\t}\n\t\treturn multiple;\n\t}"}, {"fid": 62, "label": "0", "url": "https://github.com/mongodb/mongo-java-driver/blob/a92d47e2e9f2fca55d09229a0a2e2cdc714db085/bson/src/main/org/bson/json/JsonScanner.java#L235-L463", "function_name": "JsonScanner.scanUnquotedString", "nl": "CHECKSTYLE : OFF", "code": "private JsonToken scanUnquotedString ( final char firstChar ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( firstChar ) ; int c = buffer . read ( ) ; while ( c == ' ' || c == ' ' || Character . isLetterOrDigit ( c ) ) { sb . append ( ( char ) c ) ; c = buffer . read ( ) ; } buffer . unread ( c ) ; String lexeme = sb . toString ( ) ; return new JsonToken ( JsonTokenType . UNQUOTED_STRING , lexeme ) ; }", "code_fid": 459167, "source_code": "private JsonToken scanUnquotedString(final char firstChar) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(firstChar);\n        int c = buffer.read();\n        while (c == '$' || c == '_' || Character.isLetterOrDigit(c)) {\n            sb.append((char) c);\n            c = buffer.read();\n        }\n        buffer.unread(c);\n        String lexeme = sb.toString();\n        return new JsonToken(JsonTokenType.UNQUOTED_STRING, lexeme);\n    }"}, {"fid": 63, "label": "0", "url": "https://github.com/Netflix/archaius/blob/2c4b0006fdea3b65ad98f6d9dd354a09c8c4ffdd/archaius-core/src/main/java/com/netflix/config/ConfigurationWithPollingSource.java#L337-L340", "function_name": "ConfigurationWithPollingSource.setProperty", "nl": "Delegates to the underlying configuration .", "code": "@ Override public void setProperty ( String key , Object value ) { config . setProperty ( key , value ) ; }", "code_fid": 458583, "source_code": "@Override\n    public void setProperty(String key, Object value) {\n        config.setProperty(key, value);\n    }"}, {"fid": 64, "label": "1", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/mvc/adaptor/AbstractAdaptor.java#L341-L368", "function_name": "AbstractAdaptor.paramNameInject", "nl": "\u8fd9\u662f\u6700\u540e\u7684\u5927\u62db\u4e86 \u67e5\u4e00\u4e0b\u5f62\u53c2\u7684\u540d\u5b57 \u4f5c\u4e3a", "code": "protected ParamInjector paramNameInject ( Method method , int index ) { if ( ! Lang . isAndroid ) { String paramName = getParamRealName ( index ) ; if ( paramName != null ) { Class < ? > type = argTypes [ index ] ; if ( type . isArray ( ) ) { return new ArrayInjector ( paramName , null , type , null , null , true ) ; } if ( Modifier . isInterface ( type . getModifiers ( ) ) ) return new VoidInjector ( ) ; return new NameInjector ( paramName , null , argTypes [ index ] , null , null ) ; } else if ( log . isInfoEnabled ( ) ) log . infof ( \"Complie without debug info? can't deduce param name. fail back to PathArgInjector!! index=%d > %s\" , index , method ) ; } return new PathArgInjector ( method . getParameterTypes ( ) [ index ] ) ; }", "code_fid": 457549, "source_code": "protected ParamInjector paramNameInject(Method method, int index) {\n        if (!Lang.isAndroid) {\n            String paramName = getParamRealName(index);\n            if (paramName != null) {\n                Class<?> type = argTypes[index];\n                if (type.isArray()) {\n                    return new ArrayInjector(paramName,\n                            null,\n                            type,\n                            null,\n                            null,\n                            true);\n                }\n                if (Modifier.isInterface(type.getModifiers()))\n                    return new VoidInjector();\n                return new NameInjector(paramName,\n                        null,\n                        argTypes[index],\n                        null, null);\n            }\n            else if (log.isInfoEnabled())\n                log.infof(\"Complie without debug info? can't deduce param name. fail back to PathArgInjector!! index=%d > %s\",\n                          index,\n                          method);\n    \t}\n\n        return new PathArgInjector(method.getParameterTypes()[index]);\n    }"}, {"fid": 65, "label": "1", "url": "https://github.com/magro/kryo-serializers/blob/103f2a60d5431509de29572009b7b8fab40a86af/src/main/java/de/javakaffee/kryoserializers/guava/UnmodifiableNavigableSetSerializer.java#L73-L80", "function_name": "UnmodifiableNavigableSetSerializer.registerSerializers", "nl": "Creates a new { @link UnmodifiableNavigableSetSerializer } and registers its serializer for the UnmodifiableNavigableSetSerializer related class .", "code": "public static void registerSerializers ( final Kryo kryo ) { // UnmodifiableNavigableSetSerializer (private class) final UnmodifiableNavigableSetSerializer serializer = new UnmodifiableNavigableSetSerializer ( ) ; kryo . register ( Sets . unmodifiableNavigableSet ( new TreeSet < Object > ( ) ) . getClass ( ) , serializer ) ; }", "code_fid": 461803, "source_code": "public static void registerSerializers(final Kryo kryo) {\n\n        // UnmodifiableNavigableSetSerializer (private class)\n\n        final UnmodifiableNavigableSetSerializer serializer = new UnmodifiableNavigableSetSerializer();\n\n        kryo.register(Sets.unmodifiableNavigableSet(new TreeSet<Object>()).getClass(), serializer);\n    }"}, {"fid": 66, "label": "0", "url": "https://github.com/google/guava/blob/7155d12b70a2406fa84d94d4b8b3bc108e89abfd/guava/src/com/google/common/math/LongMath.java#L556-L561", "function_name": "LongMath.divide", "nl": "Returns the difference of { @code a } and { @code b } provided it does not overflow .", "code": "@ GwtIncompatible // TODO @ SuppressWarnings ( \"fallthrough\" ) public static long divide ( long p , long q , RoundingMode mode ) { checkNotNull ( mode ) ; long div = p / q ; // throws if q == 0 long rem = p - q * div ; // equals p % q if ( rem == 0 ) { return div ; } /*      * Normal Java division rounds towards 0, consistently with RoundingMode.DOWN. We just have to      * deal with the cases where rounding towards 0 is wrong, which typically depends on the sign of      * p / q.      *      * signum is 1 if p and q are both nonnegative or both negative, and -1 otherwise.      */ int signum = 1 | ( int ) ( ( p ^ q ) >> ( Long . SIZE - 1 ) ) ; boolean increment ; switch ( mode ) { case UNNECESSARY : checkRoundingUnnecessary ( rem == 0 ) ; // fall through case DOWN : increment = false ; break ; case UP : increment = true ; break ; case CEILING : increment = signum > 0 ; break ; case FLOOR : increment = signum < 0 ; break ; case HALF_EVEN : case HALF_DOWN : case HALF_UP : long absRem = abs ( rem ) ; long cmpRemToHalfDivisor = absRem - ( abs ( q ) - absRem ) ; // subtracting two nonnegative longs can't overflow // cmpRemToHalfDivisor has the same sign as compare(abs(rem), abs(q) / 2). if ( cmpRemToHalfDivisor == 0 ) { // exactly on the half mark increment = ( mode == HALF_UP | ( mode == HALF_EVEN & ( div & 1 ) != 0 ) ) ; } else { increment = cmpRemToHalfDivisor > 0 ; // closer to the UP value } break ; default : throw new AssertionError ( ) ; } return increment ? div + signum : div ; }", "code_fid": 454693, "source_code": "@GwtIncompatible // TODO\n  @SuppressWarnings(\"fallthrough\")\n  public static long divide(long p, long q, RoundingMode mode) {\n    checkNotNull(mode);\n    long div = p / q; // throws if q == 0\n    long rem = p - q * div; // equals p % q\n\n    if (rem == 0) {\n      return div;\n    }\n\n    /*\n     * Normal Java division rounds towards 0, consistently with RoundingMode.DOWN. We just have to\n     * deal with the cases where rounding towards 0 is wrong, which typically depends on the sign of\n     * p / q.\n     *\n     * signum is 1 if p and q are both nonnegative or both negative, and -1 otherwise.\n     */\n    int signum = 1 | (int) ((p ^ q) >> (Long.SIZE - 1));\n    boolean increment;\n    switch (mode) {\n      case UNNECESSARY:\n        checkRoundingUnnecessary(rem == 0);\n        // fall through\n      case DOWN:\n        increment = false;\n        break;\n      case UP:\n        increment = true;\n        break;\n      case CEILING:\n        increment = signum > 0;\n        break;\n      case FLOOR:\n        increment = signum < 0;\n        break;\n      case HALF_EVEN:\n      case HALF_DOWN:\n      case HALF_UP:\n        long absRem = abs(rem);\n        long cmpRemToHalfDivisor = absRem - (abs(q) - absRem);\n        // subtracting two nonnegative longs can't overflow\n        // cmpRemToHalfDivisor has the same sign as compare(abs(rem), abs(q) / 2).\n        if (cmpRemToHalfDivisor == 0) { // exactly on the half mark\n          increment = (mode == HALF_UP | (mode == HALF_EVEN & (div & 1) != 0));\n        } else {\n          increment = cmpRemToHalfDivisor > 0; // closer to the UP value\n        }\n        break;\n      default:\n        throw new AssertionError();\n    }\n    return increment ? div + signum : div;\n  }"}, {"fid": 67, "label": "0", "url": "https://github.com/socialize/socialize-sdk-android/blob/23044d66c83718fe5c3f6f4b7b4033ac5b06fbee/sdk/src/com/socialize/api/action/entity/SocializeEntityUtils.java#L56-L59", "function_name": "TwitterAuthProviderInfo.merge", "nl": "/ * ( non - Javadoc )", "code": "@ Override public boolean merge ( AuthProviderInfo info ) { if ( info instanceof TwitterAuthProviderInfo ) { TwitterAuthProviderInfo that = ( TwitterAuthProviderInfo ) info ; this . consumerKey = that . consumerKey ; this . consumerSecret = that . consumerSecret ; return true ; } return false ; }", "code_fid": 467397, "source_code": "@Override\n\tpublic boolean merge(AuthProviderInfo info) {\n\t\tif(info instanceof TwitterAuthProviderInfo) {\n\t\t\tTwitterAuthProviderInfo that = (TwitterAuthProviderInfo) info;\n\t\t\tthis.consumerKey = that.consumerKey;\n\t\t\tthis.consumerSecret = that.consumerSecret;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\t\t\n\t}"}, {"fid": 68, "label": "1", "url": "https://github.com/reactor/reactor-core/blob/df2eba4ab7d2393e1a942ce972c3307fbbd47ff9/reactor-core/src/main/java/reactor/core/publisher/MonoProcessor.java#L255-L278", "function_name": "MonoProcessor.getAsLong", "nl": "Returns the internal state as a long fulfilled . <ul > <li > - 1 : cancelled< / li > <li > 0 : ready< / li > <li > 2 : subscribed< / li > <li > 3 : terminated with value< / li > <li > 4 : terminated without value< / li > <li > 5 : terminated with error< / li > < / ul >", "code": "@ Override public long getAsLong ( ) { //FIXME Should Be Removed alongside WaitStrategy NextInner < O > [ ] inners = subscribers ; if ( inners == TERMINATED ) { if ( error != null ) { return 5L ; // terminated with error } if ( value == null ) { return 4L ; // terminated without value } return 3L ; //terminated with value } if ( subscription == Operators . cancelledSubscription ( ) ) { return - 1L ; //cancelled } if ( subscribers != EMPTY && subscribers != EMPTY_WITH_SOURCE ) { return 2L ; // subscribed } return 0L ; }", "code_fid": 456215, "source_code": "@Override\n\tpublic long getAsLong() {\n\t\t//FIXME Should Be Removed alongside WaitStrategy\n\t\tNextInner<O>[] inners = subscribers;\n\t\tif (inners == TERMINATED) {\n\t\t\tif (error != null) {\n\t\t\t\treturn 5L; // terminated with error\n\t\t\t}\n\t\t\tif (value == null) {\n\t\t\t\treturn 4L; // terminated without value\n\t\t\t}\n\t\t\treturn 3L; //terminated with value\n\t\t}\n\n\t\tif (subscription == Operators.cancelledSubscription()) {\n\t\t\treturn -1L; //cancelled\n\t\t}\n\n\t\tif (subscribers != EMPTY && subscribers != EMPTY_WITH_SOURCE) {\n\t\t\treturn 2L; // subscribed\n\t\t}\n\n\t\treturn 0L;\n\t}"}, {"fid": 69, "label": "0", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/lang/Strings.java#L1260-L1262", "function_name": "Strings.join", "nl": "\u4f7f\u7528\u7ed9\u5b9a\u7684\u5206\u9694\u7b26 \u5c06\u4e00\u4e2a\u6570\u7ec4\u62fc\u63a5\u6210\u5b57\u7b26\u4e32", "code": "public static < T > String join ( String sp , T ... array ) { return Lang . concat ( sp , array ) . toString ( ) ; }", "code_fid": 457621, "source_code": "public static <T> String join(String sp, T... array) {\r\n        return Lang.concat(sp, array).toString();\r\n    }"}, {"fid": 70, "label": "0", "url": "https://github.com/lingochamp/FileDownloader/blob/53bca84d573505ff78899c4aa2056c3d40384c1b/library/src/main/java/com/liulishuo/filedownloader/FileDownloader.java#L248-L255", "function_name": "FileDownloader.start", "nl": "Pause the download queue by the same { @code listener } .", "code": "public boolean start ( final FileDownloadListener listener , final boolean isSerial ) { if ( listener == null ) { FileDownloadLog . w ( this , \"Tasks with the listener can't start, because the listener \" + \"provided is null: [null, %B]\" , isSerial ) ; return false ; } return isSerial ? getQueuesHandler ( ) . startQueueSerial ( listener ) : getQueuesHandler ( ) . startQueueParallel ( listener ) ; }", "code_fid": 456521, "source_code": "public boolean start(final FileDownloadListener listener, final boolean isSerial) {\n\n        if (listener == null) {\n            FileDownloadLog.w(this, \"Tasks with the listener can't start, because the listener \"\n                    + \"provided is null: [null, %B]\", isSerial);\n            return false;\n        }\n\n\n        return isSerial\n                ? getQueuesHandler().startQueueSerial(listener)\n                : getQueuesHandler().startQueueParallel(listener);\n    }"}, {"fid": 71, "label": "1", "url": "https://github.com/evant/JobSchedulerCompat/blob/afa59227b33824700f11bc575ca535b0e78babec/jobscheduler/src/main/java/me/tatarka/support/os/PersistableBundle.java#L177-L179", "function_name": "PersistableBundle.putString", "nl": "Inserts a String value into the mapping of this Bundle replacing any existing value for the given key . Either key or value may be null .", "code": "public void putString ( String key , String value ) { PersistableBundleCompat . putString ( bundle , key , value ) ; }", "code_fid": 462450, "source_code": "public void putString(String key, String value) {\n        PersistableBundleCompat.putString(bundle, key, value);\n    }"}, {"fid": 72, "label": "1", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/lang/Times.java#L1242-L1246", "function_name": "Times.getDaysOfMonth", "nl": "\u83b7\u53d6\u67d0\u5e74\u67d0\u6708\u7684\u5929\u6570", "code": "public static int getDaysOfMonth ( int year , int month ) { Calendar calendar = Calendar . getInstance ( ) ; calendar . set ( year , month - 1 , 1 ) ; return calendar . getActualMaximum ( Calendar . DAY_OF_MONTH ) ; }", "code_fid": 458053, "source_code": "public static int getDaysOfMonth(int year, int month) {\r\n        Calendar calendar = Calendar.getInstance();\r\n        calendar.set(year, month - 1, 1);\r\n        return calendar.getActualMaximum(Calendar.DAY_OF_MONTH);\r\n    }"}, {"fid": 73, "label": "1", "url": "https://github.com/socialize/socialize-sdk-android/blob/23044d66c83718fe5c3f6f4b7b4033ac5b06fbee/sdk/src/com/socialize/api/action/comment/SocializeCommentSystem.java#L69-L75", "function_name": "SocializeCommentSystem.addComment", "nl": "/ * ( non - Javadoc )", "code": "@ Override public void addComment ( SocializeSession session , Entity entity , String comment , CommentOptions commentOptions , CommentListener listener , SocialNetwork ... networks ) { Comment c = new Comment ( ) ; c . setText ( comment ) ; c . setEntitySafe ( entity ) ; addComment ( session , c , commentOptions , listener , networks ) ; }", "code_fid": 467377, "source_code": "@Override\n\tpublic void addComment(SocializeSession session, Entity entity, String comment, CommentOptions commentOptions, CommentListener listener, SocialNetwork... networks) {\n\t\tComment c = new Comment();\n\t\tc.setText(comment);\n\t\tc.setEntitySafe(entity);\n\t\taddComment(session, c, commentOptions, listener, networks);\n\t}"}, {"fid": 74, "label": "1", "url": "https://github.com/naver/nbase-arc/blob/d4ce8a258527160c09b55e34acc1542651a8bbb3/api/java/src/main/java/com/navercorp/redis/cluster/spring/RedisClusterConnection.java#L2224-L2236", "function_name": "RedisClusterConnection.ssMGet", "nl": "/ *", "code": "@ Override public Map < byte [ ] , Set < byte [ ] > > ssMGet ( byte [ ] key , byte [ ] field , byte [ ] ... names ) { try { if ( isPipelined ( ) ) { pipeline ( new JedisResult ( pipeline . ssmget ( key , field , names ) ) ) ; return null ; } return this . client . ssmget ( key , field , names ) ; } catch ( Exception ex ) { throw convertException ( ex ) ; } }", "code_fid": 465713, "source_code": "@Override\n    public Map<byte[], Set<byte[]>> ssMGet(byte[] key, byte[] field, byte[]... names) {\n        try {\n            if (isPipelined()) {\n                pipeline(new JedisResult(pipeline.ssmget(key, field, names)));\n                return null;\n            }\n\n            return this.client.ssmget(key, field, names);\n        } catch (Exception ex) {\n            throw convertException(ex);\n        }\n    }"}, {"fid": 75, "label": "0", "url": "https://github.com/jmxtrans/jmxtrans-agent/blob/4529593c4c8c86a8ea74146d8a645061144928f6/src/main/java/org/jmxtrans/agent/JmxTransAgent.java#L124-L132", "function_name": "Iterables2.get", "nl": "Human readable name and version .", "code": "@ Nullable public static < T > T get ( @ Nonnull Iterable < T > iterable , @ Nonnegative int position ) throws NullPointerException , IndexOutOfBoundsException { if ( iterable == null ) throw new NullPointerException ( \"iterable\" ) ; if ( iterable instanceof List ) { return ( ( List < T > ) iterable ) . get ( position ) ; } if ( position < 0 ) throw new IndexOutOfBoundsException ( \"Requested position must be greater than 0, '\" + position + \"' is invalid\" ) ; int idx = 0 ; for ( T value : iterable ) { if ( idx == position ) { return value ; } idx ++ ; } throw new IndexOutOfBoundsException ( \"Requested position must be smaller than iterable size (\" + idx + \"), '\" + position + \"' is invalid\" ) ; }", "code_fid": 464759, "source_code": "@Nullable\n    public static <T> T get(@Nonnull Iterable<T> iterable, @Nonnegative int position) throws NullPointerException, IndexOutOfBoundsException {\n        if (iterable == null)\n            throw new NullPointerException(\"iterable\");\n\n        if (iterable instanceof List) {\n            return ((List<T>) iterable).get(position);\n        }\n\n        if (position < 0)\n            throw new IndexOutOfBoundsException(\"Requested position must be greater than 0, '\" + position + \"' is invalid\");\n\n        int idx = 0;\n        for (T value : iterable) {\n            if (idx == position) {\n                return value;\n            }\n            idx++;\n        }\n        throw new IndexOutOfBoundsException(\"Requested position must be smaller than iterable size (\" + idx + \"), '\" + position + \"' is invalid\");\n    }"}, {"fid": 76, "label": "0", "url": "https://github.com/sonatype/plexus-archiver/blob/b174ef5d935c94fe58da2b48913fde1f2b972a97/src/main/java/org/codehaus/plexus/archiver/jar/Manifest.java#L863-L872", "function_name": "Manifest.addConfiguredSection", "nl": "Write the manifest out to a print writer .", "code": "public void addConfiguredSection ( Section section ) throws ManifestException { String sectionName = section . getName ( ) ; if ( sectionName == null ) { throw new ManifestException ( \"Sections must have a name\" ) ; } Attributes attributes = getOrCreateAttributes ( sectionName ) ; for ( String s : section . attributes . keySet ( ) ) { Attribute attribute = section . getAttribute ( s ) ; attributes . putValue ( attribute . getName ( ) , attribute . getValue ( ) ) ; } }", "code_fid": 463133, "source_code": "public void addConfiguredSection( Section section )\n        throws ManifestException\n    {\n        String sectionName = section.getName();\n        if ( sectionName == null )\n        {\n            throw new ManifestException( \"Sections must have a name\" );\n        }\n        Attributes attributes = getOrCreateAttributes( sectionName );\n        for ( String s : section.attributes.keySet() )\n        {\n\n            Attribute attribute = section.getAttribute( s );\n            attributes.putValue( attribute.getName(), attribute.getValue() );\n        }\n    }"}, {"fid": 77, "label": "0", "url": "https://github.com/robolectric/robolectric/blob/4fa79a2c72f8abbf742ab920419653c207b41d62/sandbox/src/main/java/org/robolectric/internal/bytecode/InstrumentationConfiguration.java#L82-L91", "function_name": "InstrumentationConfiguration.shouldAcquire", "nl": "Determine if { @link SandboxClassLoader } should instrument a given class .", "code": "public boolean shouldAcquire ( String name ) { if ( CLASSES_TO_ALWAYS_ACQUIRE . contains ( name ) ) { return true ; } if ( name . equals ( \"java.util.jar.StrictJarFile\" ) ) { return true ; } // android.R and com.android.internal.R classes must be loaded from the framework jar if ( name . matches ( \"(android|com\\\\.android\\\\.internal)\\\\.R(\\\\$.+)?\" ) ) { return true ; } // Hack. Fixes https://github.com/robolectric/robolectric/issues/1864 if ( name . equals ( \"javax.net.ssl.DistinguishedNameParser\" ) || name . equals ( \"javax.microedition.khronos.opengles.GL\" ) ) { return true ; } for ( String packageName : packagesToNotAcquire ) { if ( name . startsWith ( packageName ) ) return false ; } // R classes must be loaded from system CP boolean isRClass = name . matches ( \".*\\\\.R(|\\\\$[a-z]+)$\" ) ; return ! isRClass && ! classesToNotAcquire . contains ( name ) ; }", "code_fid": 457337, "source_code": "public boolean shouldAcquire(String name) {\n    if (CLASSES_TO_ALWAYS_ACQUIRE.contains(name)) {\n      return true;\n    }\n\n    if (name.equals(\"java.util.jar.StrictJarFile\")) {\n      return true;\n    }\n\n    // android.R and com.android.internal.R classes must be loaded from the framework jar\n    if (name.matches(\"(android|com\\\\.android\\\\.internal)\\\\.R(\\\\$.+)?\")) {\n      return true;\n    }\n\n    // Hack. Fixes https://github.com/robolectric/robolectric/issues/1864\n    if (name.equals(\"javax.net.ssl.DistinguishedNameParser\")\n        || name.equals(\"javax.microedition.khronos.opengles.GL\")) {\n      return true;\n    }\n\n    for (String packageName : packagesToNotAcquire) {\n      if (name.startsWith(packageName)) return false;\n    }\n\n    // R classes must be loaded from system CP\n    boolean isRClass = name.matches(\".*\\\\.R(|\\\\$[a-z]+)$\");\n    return !isRClass && !classesToNotAcquire.contains(name);\n  }"}, {"fid": 78, "label": "0", "url": "https://github.com/NitorCreations/willow/blob/914911697426b5b95756a099de373438ffa12026/willow-eventhandler/src/main/java/com/nitorcreations/willow/eventhandler/Main.java#L91-L95", "function_name": "Main.doMain", "nl": "Get the Guice modules to be used in injecting dependencies .", "code": "protected void doMain ( String ... args ) { properties = new MergeableProperties ( ) ; properties . putAll ( System . getProperties ( ) ) ; for ( String arg : args ) { properties . merge ( arg ) ; } // Read event handling configuration Map < String , List < EventHandler > > eventHandlers = new LinkedHashMap <> ( ) ; MergeableProperties allProperties = properties . getPrefixed ( \"willow-event-handler.handlers\" ) ; int i = 0 ; while ( true ) { MergeableProperties handlerProperties = allProperties . getPrefixed ( \"[\" + i ++ + \"]\" ) ; if ( handlerProperties . isEmpty ( ) ) { break ; } String handlerClassName = handlerProperties . getProperty ( \"handler\" ) ; String eventClassName = handlerProperties . getProperty ( \"event\" ) ; try { EventHandler eventHandler = ( EventHandler ) injector . getInstance ( Class . forName ( handlerClassName ) ) ; MergeableProperties beanProperties = handlerProperties . getPrefixed ( \"properties\" ) ; for ( String propertyName : beanProperties . stringPropertyNames ( ) ) { String propertyValue = beanProperties . getProperty ( propertyName ) ; BeanUtils . setProperty ( eventHandler , propertyName , propertyValue ) ; } List < EventHandler > eventHandlersForType = eventHandlers . get ( eventClassName ) ; if ( eventHandlersForType == null ) { eventHandlersForType = new ArrayList <> ( ) ; eventHandlers . put ( eventClassName , eventHandlersForType ) ; } eventHandlersForType . add ( eventHandler ) ; } catch ( ClassNotFoundException | IllegalAccessException | InvocationTargetException e ) { logger . log ( Level . SEVERE , \"Error instantiating handler\" , e ) ; System . exit ( 1 ) ; } } if ( eventHandlers . isEmpty ( ) ) { logger . info ( \"No event handlers configured. Exiting.\" ) ; System . exit ( 0 ) ; } Runtime . getRuntime ( ) . addShutdownHook ( new Thread ( ) { @ Override public void run ( ) { Main . this . stop ( ) ; } } ) ; // Start polling events String uri = properties . getProperty ( \"willow-event-handler.eventsUri\" ) ; try { logger . info ( \"Initializing event poller\" ) ; eventPoller . initialize ( eventHandlers , new URI ( uri ) ) ; } catch ( URISyntaxException e ) { logger . log ( Level . SEVERE , \"Invalid URI: \" + uri , e ) ; System . exit ( 1 ) ; } }", "code_fid": 465987, "source_code": "protected void doMain(String... args) {\n    properties = new MergeableProperties();\n    properties.putAll(System.getProperties());\n    for (String arg : args) {\n      properties.merge(arg);\n    }\n    // Read event handling configuration\n    Map<String, List<EventHandler>> eventHandlers = new LinkedHashMap<>();\n    MergeableProperties allProperties = properties.getPrefixed(\"willow-event-handler.handlers\");\n    int i = 0;\n    while (true) {\n      MergeableProperties handlerProperties = allProperties.getPrefixed(\"[\" + i++ + \"]\");\n      if (handlerProperties.isEmpty()) {\n        break;\n      }\n      String handlerClassName = handlerProperties.getProperty(\"handler\");\n      String eventClassName = handlerProperties.getProperty(\"event\");\n      try {\n        EventHandler eventHandler = (EventHandler) injector.getInstance(Class.forName(handlerClassName));\n        MergeableProperties beanProperties = handlerProperties.getPrefixed(\"properties\");\n        for (String propertyName : beanProperties.stringPropertyNames()) {\n          String propertyValue = beanProperties.getProperty(propertyName);\n          BeanUtils.setProperty(eventHandler, propertyName, propertyValue);\n        }\n        List<EventHandler> eventHandlersForType = eventHandlers.get(eventClassName);\n        if (eventHandlersForType == null) {\n          eventHandlersForType = new ArrayList<>();\n          eventHandlers.put(eventClassName, eventHandlersForType);\n        }\n        eventHandlersForType.add(eventHandler);\n      } catch (ClassNotFoundException | IllegalAccessException | InvocationTargetException e) {\n        logger.log(Level.SEVERE, \"Error instantiating handler\", e);\n        System.exit(1);\n      }\n    }\n\n    if (eventHandlers .isEmpty()) {\n      logger.info(\"No event handlers configured. Exiting.\");\n      System.exit(0);\n    }\n\n    Runtime.getRuntime().addShutdownHook(new Thread() {\n      @Override\n      public void run() {\n        Main.this.stop();\n      }\n    });\n\n    // Start polling events\n    String uri = properties.getProperty(\"willow-event-handler.eventsUri\");\n    try {\n      logger.info(\"Initializing event poller\");\n      eventPoller.initialize(eventHandlers, new URI(uri));\n    } catch (URISyntaxException e) {\n      logger.log(Level.SEVERE, \"Invalid URI: \" + uri, e);\n      System.exit(1);\n    }\n  }"}, {"fid": 79, "label": "0", "url": "https://github.com/Commonjava/indy/blob/38bf28dfce3bc25745ed239a5cd74efc56cf5c01/subsys/metrics/core/src/main/java/org/commonjava/indy/metrics/IndyMetricsConstants.java#L69-L76", "function_name": "IndyMetricsConstants.getDefaultName", "nl": "Get the metric fullname .", "code": "public static String getDefaultName ( Class < ? > declaringClass , String method ) { // minimum len 1 shortens the package name and keeps class name String cls = ClassUtils . getAbbreviatedName ( declaringClass . getName ( ) , 1 ) ; return name ( cls , method ) ; }", "code_fid": 463583, "source_code": "public static String getDefaultName( Class<?> declaringClass, String method )\n    {\n        // minimum len 1 shortens the package name and keeps class name\n        String cls = ClassUtils.getAbbreviatedName( declaringClass.getName(), 1 );\n        return name( cls, method );\n    }"}, {"fid": 80, "label": "0", "url": "https://github.com/jooby-project/jooby/blob/9795b65ccea63c630592f0a320aca2000ca19a8b/modules/jooby-pac4j/src/main/java/org/jooby/pac4j/Auth.java#L680-L682", "function_name": "Auth.client", "nl": "Add an auth client like facebook twitter github etc ... Please note the require dependency must be in the classpath .", "code": "public < C extends Credentials , U extends CommonProfile > Auth client ( final String pattern , final Client < C , U > client ) { return client ( pattern , config -> client ) ; }", "code_fid": 459743, "source_code": "public <C extends Credentials, U extends CommonProfile> Auth client(final String pattern,\n      final Client<C, U> client) {\n    return client(pattern, config -> client);\n  }"}, {"fid": 81, "label": "1", "url": "https://github.com/liquibase/liquibase/blob/86a3b30fa6821ac981056f252f918557f5ebcc60/liquibase-core/src/main/java/liquibase/configuration/ConfigurationProperty.java#L174-L185", "function_name": "ConfigurationProperty.setDefaultValue", "nl": "Sets the default value to use if no ConfigurationProviders override it . Throws an exception if the given object is not compatible with the defined type .", "code": "public ConfigurationProperty setDefaultValue ( Object defaultValue ) { if ( ( defaultValue != null ) && ! type . isAssignableFrom ( defaultValue . getClass ( ) ) ) { if ( ( type == Long . class ) && ( defaultValue instanceof Integer ) ) { return setDefaultValue ( ( ( Integer ) defaultValue ) . longValue ( ) ) ; } throw new UnexpectedLiquibaseException ( \"Property \" + name + \" on is of type \" + type . getSimpleName ( ) + \", not \" + defaultValue . getClass ( ) . getSimpleName ( ) ) ; } this . defaultValue = defaultValue ; return this ; }", "code_fid": 458262, "source_code": "public ConfigurationProperty setDefaultValue(Object defaultValue) {\n        if ((defaultValue != null) && !type.isAssignableFrom(defaultValue.getClass())) {\n            if ((type == Long.class) && (defaultValue instanceof Integer)) {\n                return setDefaultValue(((Integer) defaultValue).longValue());\n            }\n            throw new UnexpectedLiquibaseException(\"Property \"+name+\" on is of type \"+type.getSimpleName()+\", not \"+defaultValue.getClass().getSimpleName());\n        }\n\n        this.defaultValue = defaultValue;\n\n        return this;\n    }"}, {"fid": 82, "label": "1", "url": "https://github.com/jooby-project/jooby/blob/9795b65ccea63c630592f0a320aca2000ca19a8b/modules/jooby-apitool/src/main/java/org/jooby/apitool/raml/RamlMethod.java#L399-L409", "function_name": "RamlMethod.queryParameter", "nl": "Get or create a query parameter using the giving name .", "code": "public RamlParameter queryParameter ( String name ) { if ( queryParameters == null ) { queryParameters = new LinkedHashMap <> ( ) ; } RamlParameter param = queryParameters . get ( name ) ; if ( param == null ) { param = new RamlParameter ( name ) ; queryParameters . put ( name , param ) ; } return param ; }", "code_fid": 459777, "source_code": "public RamlParameter queryParameter(String name) {\n    if (queryParameters == null) {\n      queryParameters = new LinkedHashMap<>();\n    }\n    RamlParameter param = queryParameters.get(name);\n    if (param == null) {\n      param = new RamlParameter(name);\n      queryParameters.put(name, param);\n    }\n    return param;\n  }"}, {"fid": 83, "label": "0", "url": "https://github.com/RestComm/jain-sip.ha/blob/25bd4b4391800aa3f6019fb0ce03d012e54c15b5/core/src/main/java/org/mobicents/ha/javax/sip/ClusteredSipStackImpl.java#L589-L604", "function_name": "ClusteredSipStackImpl.findTransaction", "nl": "/ * ( non - Javadoc )", "code": "@ Override public SIPTransaction findTransaction ( String transactionId , boolean isServer ) { if ( sipCache . inLocalMode ( ) || replicationStrategy != ReplicationStrategy . EarlyDialog ) { return super . findTransaction ( transactionId , isServer ) ; } final String txId = transactionId . toLowerCase ( ) ; SIPTransaction sipTransaction = super . findTransaction ( txId , isServer ) ; if ( sipTransaction == null && transactionFactory != null ) { if ( getStackLogger ( ) . isLoggingEnabled ( StackLogger . TRACE_DEBUG ) ) { getStackLogger ( ) . logDebug ( \"local transaction \" + txId + \" server = \" + isServer + \" is null, checking in the distributed cache\" ) ; } if ( getStackLogger ( ) . isLoggingEnabled ( StackLogger . TRACE_DEBUG ) ) { getStackLogger ( ) . logDebug ( \"sipStack \" + this + \" checking if the transaction \" + txId + \" server = \" + isServer + \" is present in the distributed cache\" ) ; } if ( isServer ) { // fetch the corresponding server transaction from the cache instance try { sipTransaction = sipCache . getServerTransaction ( txId ) ; if ( sipTransaction != null ) { if ( getStackLogger ( ) . isLoggingEnabled ( StackLogger . TRACE_DEBUG ) ) { getStackLogger ( ) . logDebug ( \"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is present in the distributed cache\" ) ; } SIPServerTransaction retval = serverTransactionTable . putIfAbsent ( txId , ( SIPServerTransaction ) sipTransaction ) ; if ( retval != null ) { sipTransaction = retval ; } } else { if ( getStackLogger ( ) . isLoggingEnabled ( StackLogger . TRACE_DEBUG ) ) { getStackLogger ( ) . logDebug ( \"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is not present in the distributed cache\" ) ; } } } catch ( SipCacheException e ) { getStackLogger ( ) . logError ( \"sipStack \" + this + \" problem getting transaction \" + txId + \" server = \" + isServer + \" from the distributed cache\" , e ) ; } } else { // fetch the corresponding client transaction from the cache instance try { sipTransaction = sipCache . getClientTransaction ( txId ) ; if ( sipTransaction != null ) { if ( getStackLogger ( ) . isLoggingEnabled ( StackLogger . TRACE_DEBUG ) ) { getStackLogger ( ) . logDebug ( \"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is present in the distributed cache\" ) ; } SIPClientTransaction retval = clientTransactionTable . putIfAbsent ( txId , ( SIPClientTransaction ) sipTransaction ) ; if ( retval != null ) { sipTransaction = retval ; } else { // start the transaction timer only when the transaction has been added to the stack // to avoid leaks on retransmissions ( ( MobicentsHASIPClientTransaction ) sipTransaction ) . startTransactionTimerOnFailover ( ) ; } } else { if ( getStackLogger ( ) . isLoggingEnabled ( StackLogger . TRACE_DEBUG ) ) { getStackLogger ( ) . logDebug ( \"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is not present in the distributed cache\" ) ; } } } catch ( SipCacheException e ) { getStackLogger ( ) . logError ( \"sipStack \" + this + \" problem getting transaction \" + txId + \" server = \" + isServer + \" from the distributed cache\" , e ) ; } } } return sipTransaction ; }", "code_fid": 464629, "source_code": "@Override\n\tpublic SIPTransaction findTransaction(String transactionId, boolean isServer) {\n\t\tif(sipCache.inLocalMode() || replicationStrategy != ReplicationStrategy.EarlyDialog) {\n\t\t\treturn super.findTransaction(transactionId,isServer);\n\t\t}\n\t\tfinal String txId = transactionId.toLowerCase();\n\t\tSIPTransaction sipTransaction = super.findTransaction(txId, isServer);\n\t\tif(sipTransaction == null && transactionFactory != null) {\n\t\t\tif(getStackLogger().isLoggingEnabled(StackLogger.TRACE_DEBUG)) {\n\t\t\t\tgetStackLogger().logDebug(\"local transaction \" + txId + \" server = \" + isServer + \" is null, checking in the distributed cache\");\n\t\t\t}\n\t\t\tif(getStackLogger().isLoggingEnabled(StackLogger.TRACE_DEBUG)) {\n\t\t\t\tgetStackLogger().logDebug(\"sipStack \" + this + \" checking if the transaction \" + txId + \" server = \" + isServer + \" is present in the distributed cache\");\n\t\t\t}\t\n\t\t\tif(isServer) {\n\t\t\t\t// fetch the corresponding server transaction from the cache instance\n\t\t\t\ttry {\n\t\t\t\t\tsipTransaction = sipCache.getServerTransaction(txId);\n\t\t\t\t\tif(sipTransaction != null) {\n\t\t\t\t\t\tif(getStackLogger().isLoggingEnabled(StackLogger.TRACE_DEBUG)) {\n\t\t\t\t\t\t\tgetStackLogger().logDebug(\"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is present in the distributed cache\");\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\tSIPServerTransaction retval = serverTransactionTable.putIfAbsent(txId, (SIPServerTransaction) sipTransaction);\n\t\t\t\t\t\tif(retval != null) {\n\t\t\t\t\t\t\tsipTransaction = retval;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(getStackLogger().isLoggingEnabled(StackLogger.TRACE_DEBUG)) {\n\t\t\t\t\t\t\tgetStackLogger().logDebug(\"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is not present in the distributed cache\");\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t} catch (SipCacheException e) {\n\t\t\t\t\tgetStackLogger().logError(\"sipStack \" + this + \" problem getting transaction \" + txId + \" server = \" + isServer + \" from the distributed cache\", e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// fetch the corresponding client transaction from the cache instance\n\t\t\t\ttry {\n\t\t\t\t\tsipTransaction = sipCache.getClientTransaction(txId);\n\t\t\t\t\tif(sipTransaction != null) {\n\t\t\t\t\t\tif(getStackLogger().isLoggingEnabled(StackLogger.TRACE_DEBUG)) {\n\t\t\t\t\t\t\tgetStackLogger().logDebug(\"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is present in the distributed cache\");\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\tSIPClientTransaction retval = clientTransactionTable.putIfAbsent(txId, (SIPClientTransaction) sipTransaction);\n\t\t\t\t\t\tif(retval != null) {\n\t\t\t\t\t\t\tsipTransaction = retval;\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// start the transaction timer only when the transaction has been added to the stack\n\t\t\t\t\t\t\t// to avoid leaks on retransmissions\n\t\t\t\t\t\t\t((MobicentsHASIPClientTransaction)sipTransaction).startTransactionTimerOnFailover();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(getStackLogger().isLoggingEnabled(StackLogger.TRACE_DEBUG)) {\n\t\t\t\t\t\t\tgetStackLogger().logDebug(\"sipStack \" + this + \" transaction \" + txId + \" server = \" + isServer + \" is not present in the distributed cache\");\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t} catch (SipCacheException e) {\n\t\t\t\t\tgetStackLogger().logError(\"sipStack \" + this + \" problem getting transaction \" + txId + \" server = \" + isServer + \" from the distributed cache\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sipTransaction;\n\t}"}, {"fid": 84, "label": "1", "url": "https://github.com/Hack23/cia/blob/223312ca0eec74888a57a060de5b164f95a7785f/model.external.riksdagen.person.impl/src/main/java/com/hack23/cia/model/external/riksdagen/person/impl/PersonData.java#L465-L471", "function_name": "PersonData.getPersonDetailData", "nl": "Gets the person detail data .", "code": "@ ManyToOne ( targetEntity = PersonDetailData . class , cascade = { CascadeType . ALL } ) @ JoinColumn ( name = \"PERSON_DETAIL_DATA_PERSON_DA_0\" ) public PersonDetailData getPersonDetailData ( ) { return personDetailData ; }", "code_fid": 461042, "source_code": "@ManyToOne(targetEntity = PersonDetailData.class, cascade = {\n        CascadeType.ALL\n    })\n    @JoinColumn(name = \"PERSON_DETAIL_DATA_PERSON_DA_0\")\n    public PersonDetailData getPersonDetailData() {\n        return personDetailData;\n    }"}, {"fid": 85, "label": "1", "url": "https://github.com/mongodb/mongo-java-driver/blob/a92d47e2e9f2fca55d09229a0a2e2cdc714db085/driver-core/src/main/com/mongodb/BasicDBObjectBuilder.java#L56-L58", "function_name": "BasicDBObjectBuilder.start", "nl": "Creates a builder initialized with the given key / value .", "code": "public static BasicDBObjectBuilder start ( final String key , final Object val ) { return ( new BasicDBObjectBuilder ( ) ) . add ( key , val ) ; }", "code_fid": 459145, "source_code": "public static BasicDBObjectBuilder start(final String key, final Object val) {\n        return (new BasicDBObjectBuilder()).add(key, val);\n    }"}, {"fid": 86, "label": "1", "url": "https://github.com/abel533/DBMetadata/blob/6dc127077c55dc43680bf2003f60caccfe7798b5/DBMetadata-core/src/main/java/com/github/abel533/database/introspector/DatabaseIntrospector.java#L324-L363", "function_name": "DatabaseIntrospector.getColumns", "nl": "\u83b7\u53d6\u5168\u90e8\u7684\u8868\u548c\u5b57\u6bb5", "code": "protected Map < IntrospectedTable , List < IntrospectedColumn > > getColumns ( DatabaseConfig config ) throws SQLException { Map < IntrospectedTable , List < IntrospectedColumn > > answer = new HashMap < IntrospectedTable , List < IntrospectedColumn > > ( ) ; ResultSet rs = dbMetadataUtils . getDatabaseMetaData ( ) . getColumns ( config . getCatalog ( ) , config . getSchemaPattern ( ) , config . getTableNamePattern ( ) , null ) ; while ( rs . next ( ) ) { IntrospectedColumn column = new IntrospectedColumn ( ) ; column . setJdbcType ( rs . getInt ( \"DATA_TYPE\" ) ) ; column . setType ( rs . getString ( \"TYPE_NAME\" ) ) ; column . setLength ( rs . getInt ( \"COLUMN_SIZE\" ) ) ; column . setName ( rs . getString ( \"COLUMN_NAME\" ) ) ; column . setNullable ( rs . getInt ( \"NULLABLE\" ) == DatabaseMetaData . columnNullable ) ; column . setScale ( rs . getInt ( \"DECIMAL_DIGITS\" ) ) ; column . setRemarks ( rs . getString ( \"REMARKS\" ) ) ; column . setDefaultValue ( rs . getString ( \"COLUMN_DEF\" ) ) ; IntrospectedTable table = new IntrospectedTable ( rs . getString ( \"TABLE_CAT\" ) , rs . getString ( \"TABLE_SCHEM\" ) , rs . getString ( \"TABLE_NAME\" ) ) ; List < IntrospectedColumn > columns = answer . get ( table ) ; if ( columns == null ) { columns = new ArrayList < IntrospectedColumn > ( ) ; answer . put ( table , columns ) ; if ( config . hasProcess ( ) ) { config . getDatabaseProcess ( ) . processTable ( table ) ; } } if ( config . hasProcess ( ) ) { config . getDatabaseProcess ( ) . processColumn ( table , column ) ; } columns . add ( column ) ; } closeResultSet ( rs ) ; return answer ; }", "code_fid": 462817, "source_code": "protected Map<IntrospectedTable, List<IntrospectedColumn>> getColumns(DatabaseConfig config) throws SQLException {\n        Map<IntrospectedTable, List<IntrospectedColumn>> answer = new HashMap<IntrospectedTable, List<IntrospectedColumn>>();\n\n        ResultSet rs = dbMetadataUtils.getDatabaseMetaData().getColumns(\n                config.getCatalog(),\n                config.getSchemaPattern(),\n                config.getTableNamePattern(),\n                null);\n        while (rs.next()) {\n            IntrospectedColumn column = new IntrospectedColumn();\n            column.setJdbcType(rs.getInt(\"DATA_TYPE\"));\n            column.setType(rs.getString(\"TYPE_NAME\"));\n            column.setLength(rs.getInt(\"COLUMN_SIZE\"));\n            column.setName(rs.getString(\"COLUMN_NAME\"));\n            column.setNullable(rs.getInt(\"NULLABLE\") == DatabaseMetaData.columnNullable);\n            column.setScale(rs.getInt(\"DECIMAL_DIGITS\"));\n            column.setRemarks(rs.getString(\"REMARKS\"));\n            column.setDefaultValue(rs.getString(\"COLUMN_DEF\"));\n\n            IntrospectedTable table = new IntrospectedTable(\n                    rs.getString(\"TABLE_CAT\"),\n                    rs.getString(\"TABLE_SCHEM\"),\n                    rs.getString(\"TABLE_NAME\"));\n\n            List<IntrospectedColumn> columns = answer.get(table);\n            if (columns == null) {\n                columns = new ArrayList<IntrospectedColumn>();\n                answer.put(table, columns);\n                if (config.hasProcess()) {\n                    config.getDatabaseProcess().processTable(table);\n                }\n            }\n            if (config.hasProcess()) {\n                config.getDatabaseProcess().processColumn(table, column);\n            }\n            columns.add(column);\n        }\n        closeResultSet(rs);\n        return answer;\n    }"}, {"fid": 87, "label": "0", "url": "https://github.com/ldp4j/ldp4j/blob/4236dfb3a746be390155c1056bbb5a8d4dccc49f/framework/application/engine/sdk/src/main/java/org/ldp4j/application/sdk/internal/BooleanObjectFactory.java#L64-L71", "function_name": "ContentNegotiator.negotiate", "nl": "Returns a { @code Boolean } with a value represented by the specified string . The { @code Boolean } returned represents : <ol > <li > a { @code true } value if the string argument is not { @code null } and is equal ignoring case to the string { @code true } . < / li > <li > a { @code false } value if the string argument is not { @code null } and is equal ignoring case to the string { @code false } . < / li > < / ol >", "code": "public NegotiationResult negotiate ( ) { return new ContentNegotiationAlgorithm ( this . mediaTypes . build ( ) , this . characterEncodings . build ( ) , this . languages . build ( ) , this . supported . build ( ) , this . accepts . build ( ) , this . acceptCharsets . build ( ) , this . acceptLanguages . build ( ) , this . errorVariant ) . execute ( ) ; }", "code_fid": 468451, "source_code": "public NegotiationResult negotiate() {\n\t\treturn\n\t\t\tnew ContentNegotiationAlgorithm(\n\t\t\t\tthis.mediaTypes.build(),\n\t\t\t\tthis.characterEncodings.build(),\n\t\t\t\tthis.languages.build(),\n\t\t\t\tthis.supported.build(),\n\t\t\t\tthis.accepts.build(),\n\t\t\t\tthis.acceptCharsets.build(),\n\t\t\t\tthis.acceptLanguages.build(),\n\t\t\t\tthis.errorVariant).\n\t\t\t\texecute();\n\t}"}, {"fid": 88, "label": "0", "url": "https://github.com/mjeanroy/junit-servers/blob/e5628ac13414da9ab0110491c011e2b02239155c/junit-servers-core/src/main/java/com/github/mjeanroy/junit/servers/client/HttpHeader.java#L81-L83", "function_name": "EmbeddedJetty.createdWebAppContext", "nl": "Create a header with multiple values .", "code": "private WebAppContext createdWebAppContext ( ) throws Exception { final String path = configuration . getPath ( ) ; final String webapp = configuration . getWebapp ( ) ; final String classpath = configuration . getClasspath ( ) ; final ClassLoader parentClassLoader = configuration . getParentClassLoader ( ) ; final String overrideDescriptor = configuration . getOverrideDescriptor ( ) ; final Resource baseResource = configuration . getBaseResource ( ) ; final String containerJarPattern = configuration . getContainerJarPattern ( ) ; final String webInfJarPattern = configuration . getWebInfJarPattern ( ) ; WebAppContext ctx = new WebAppContext ( ) ; if ( containerJarPattern != null ) { ctx . setAttribute ( WebInfConfiguration . CONTAINER_JAR_PATTERN , containerJarPattern ) ; } else if ( JavaUtils . isPostJdk9 ( ) ) { // Fix to make TLD scanning works with Java >= 9 ctx . setAttribute ( WebInfConfiguration . CONTAINER_JAR_PATTERN , \".*\\\\.jar\" ) ; } if ( webInfJarPattern != null ) { ctx . setAttribute ( WebInfConfiguration . WEBINF_JAR_PATTERN , webInfJarPattern ) ; } final ClassLoader systemClassLoader = Thread . currentThread ( ) . getContextClassLoader ( ) ; final ClassLoader classLoader ; if ( parentClassLoader != null ) { classLoader = new CompositeClassLoader ( parentClassLoader , systemClassLoader ) ; } else { classLoader = systemClassLoader ; } ctx . setClassLoader ( classLoader ) ; ctx . setContextPath ( path ) ; if ( baseResource == null ) { // use default base resource ctx . setBaseResource ( newResource ( webapp ) ) ; } else { ctx . setBaseResource ( baseResource ) ; } if ( overrideDescriptor != null ) { ctx . setOverrideDescriptor ( overrideDescriptor ) ; } ctx . setConfigurations ( new Configuration [ ] { new WebInfConfiguration ( ) , new WebXmlConfiguration ( ) , new AnnotationConfiguration ( ) , new JettyWebXmlConfiguration ( ) , new MetaInfConfiguration ( ) , new FragmentConfiguration ( ) } ) ; if ( isNotBlank ( classpath ) ) { // Fix to scan Spring WebApplicationInitializer // This will add compiled classes to jetty classpath // See: http://stackoverflow.com/questions/13222071/spring-3-1-webapplicationinitializer-embedded-jetty-8-annotationconfiguration // And more precisely: http://stackoverflow.com/a/18449506/1215828 File classes = new File ( classpath ) ; PathResource containerResources = new PathResource ( classes . toURI ( ) ) ; ctx . getMetaData ( ) . addContainerResource ( containerResources ) ; } ctx . setParentLoaderPriority ( true ) ; ctx . setWar ( webapp ) ; ctx . setServer ( server ) ; // Add server context server . setHandler ( ctx ) ; return ctx ; }", "code_fid": 464523, "source_code": "private WebAppContext createdWebAppContext() throws Exception {\n\t\tfinal String path = configuration.getPath();\n\t\tfinal String webapp = configuration.getWebapp();\n\t\tfinal String classpath = configuration.getClasspath();\n\t\tfinal ClassLoader parentClassLoader = configuration.getParentClassLoader();\n\t\tfinal String overrideDescriptor = configuration.getOverrideDescriptor();\n\t\tfinal Resource baseResource = configuration.getBaseResource();\n\t\tfinal String containerJarPattern = configuration.getContainerJarPattern();\n\t\tfinal String webInfJarPattern = configuration.getWebInfJarPattern();\n\n\t\tWebAppContext ctx = new WebAppContext();\n\n\t\tif (containerJarPattern != null) {\n\t\t\tctx.setAttribute(WebInfConfiguration.CONTAINER_JAR_PATTERN, containerJarPattern);\n\t\t}\n\t\telse if (JavaUtils.isPostJdk9()) {\n\t\t\t// Fix to make TLD scanning works with Java >= 9\n\t\t\tctx.setAttribute(WebInfConfiguration.CONTAINER_JAR_PATTERN, \".*\\\\.jar\");\n\t\t}\n\n\t\tif (webInfJarPattern != null) {\n\t\t\tctx.setAttribute(WebInfConfiguration.WEBINF_JAR_PATTERN, webInfJarPattern);\n\t\t}\n\n\t\tfinal ClassLoader systemClassLoader = Thread.currentThread().getContextClassLoader();\n\t\tfinal ClassLoader classLoader;\n\n\t\tif (parentClassLoader != null) {\n\t\t\tclassLoader = new CompositeClassLoader(parentClassLoader, systemClassLoader);\n\t\t}\n\t\telse {\n\t\t\tclassLoader = systemClassLoader;\n\t\t}\n\n\t\tctx.setClassLoader(classLoader);\n\t\tctx.setContextPath(path);\n\n\t\tif (baseResource == null) {\n\t\t\t// use default base resource\n\t\t\tctx.setBaseResource(newResource(webapp));\n\t\t}\n\t\telse {\n\t\t\tctx.setBaseResource(baseResource);\n\t\t}\n\n\t\tif (overrideDescriptor != null) {\n\t\t\tctx.setOverrideDescriptor(overrideDescriptor);\n\t\t}\n\n\t\tctx.setConfigurations(new Configuration[] {\n\t\t\tnew WebInfConfiguration(),\n\t\t\tnew WebXmlConfiguration(),\n\t\t\tnew AnnotationConfiguration(),\n\t\t\tnew JettyWebXmlConfiguration(),\n\t\t\tnew MetaInfConfiguration(),\n\t\t\tnew FragmentConfiguration()\n\t\t});\n\n\t\tif (isNotBlank(classpath)) {\n\t\t\t// Fix to scan Spring WebApplicationInitializer\n\t\t\t// This will add compiled classes to jetty classpath\n\t\t\t// See: http://stackoverflow.com/questions/13222071/spring-3-1-webapplicationinitializer-embedded-jetty-8-annotationconfiguration\n\t\t\t// And more precisely: http://stackoverflow.com/a/18449506/1215828\n\t\t\tFile classes = new File(classpath);\n\t\t\tPathResource containerResources = new PathResource(classes.toURI());\n\t\t\tctx.getMetaData().addContainerResource(containerResources);\n\t\t}\n\n\t\tctx.setParentLoaderPriority(true);\n\t\tctx.setWar(webapp);\n\t\tctx.setServer(server);\n\n\t\t// Add server context\n\t\tserver.setHandler(ctx);\n\n\t\treturn ctx;\n\t}"}, {"fid": 89, "label": "0", "url": "https://github.com/eteration/glassmaker/blob/d7f3d0d5e08376d6262a9e9ba198b14f6eac840c/org.glassmaker.eclipse/org.glassmaker.ui.editor/src/main/java/org/glassmaker/ui/editor/wizards/NewCardFileWizardPage.java#L218-L231", "function_name": "CriteriaUtils.createCriteria", "nl": "Returns the project that contains the specified path", "code": "public static Criteria createCriteria ( EntityManager entityManager , Class < ? > persistentClass ) { errorIfClosed ( entityManager ) ; return new CriteriaImpl ( entityManager , persistentClass . getSimpleName ( ) ) ; }", "code_fid": 469341, "source_code": "public static Criteria createCriteria(EntityManager entityManager, \n      Class<?> persistentClass) {\n    errorIfClosed(entityManager);\n    return new CriteriaImpl( entityManager, persistentClass.getSimpleName() );\n  }"}, {"fid": 90, "label": "1", "url": "https://github.com/Hack23/cia/blob/223312ca0eec74888a57a060de5b164f95a7785f/service.data.impl/src/main/java/com/hack23/cia/service/data/impl/AbstractGenericDAOImpl.java#L110-L115", "function_name": "AbstractGenericDAOImpl.getStringIdList", "nl": "Gets the string id list .", "code": "protected final List < String > getStringIdList ( final SingularAttribute < T , String > property ) { final CriteriaQuery < String > criteria = getCriteriaBuilder ( ) . createQuery ( String . class ) ; final Root < T > root = criteria . from ( persistentClass ) ; criteria . select ( getCriteriaBuilder ( ) . construct ( String . class , root . get ( property ) ) ) ; return getEntityManager ( ) . createQuery ( criteria ) . getResultList ( ) ; }", "code_fid": 460942, "source_code": "protected final List<String> getStringIdList(final SingularAttribute<T, String> property) {\n\t\tfinal CriteriaQuery<String> criteria = getCriteriaBuilder().createQuery(String.class);\n\t\tfinal Root<T> root = criteria.from(persistentClass);\n\t\tcriteria.select(getCriteriaBuilder().construct(String.class,root.get(property)));\n\t\treturn getEntityManager().createQuery(criteria).getResultList();\n\t}"}, {"fid": 91, "label": "1", "url": "https://github.com/socialize/socialize-sdk-android/blob/23044d66c83718fe5c3f6f4b7b4033ac5b06fbee/sdk/src/com/socialize/oauth/signpost/AbstractOAuthConsumer.java#L246-L255", "function_name": "AbstractOAuthConsumer.collectBodyParameters", "nl": "Collects x - www - form - urlencoded body parameters as per OAuth Core 1 . 0 spec section 9 . 1 . 1", "code": "protected void collectBodyParameters ( HttpRequest request , HttpParameters out ) throws IOException { // collect x-www-form-urlencoded body params String contentType = request . getContentType ( ) ; if ( contentType != null && contentType . startsWith ( OAuth . FORM_ENCODED ) ) { InputStream payload = request . getMessagePayload ( ) ; out . putAll ( OAuth . decodeForm ( payload ) , true ) ; } }", "code_fid": 467282, "source_code": "protected void collectBodyParameters(HttpRequest request, HttpParameters out)\n            throws IOException {\n\n        // collect x-www-form-urlencoded body params\n        String contentType = request.getContentType();\n        if (contentType != null && contentType.startsWith(OAuth.FORM_ENCODED)) {\n            InputStream payload = request.getMessagePayload();\n            out.putAll(OAuth.decodeForm(payload), true);\n        }\n    }"}, {"fid": 92, "label": "0", "url": "https://github.com/google/guava/blob/7155d12b70a2406fa84d94d4b8b3bc108e89abfd/guava/src/com/google/common/reflect/TypeToken.java#L252-L254", "function_name": "TypeToken.where", "nl": "Returns a new { @code TypeToken } where type variables represented by { @code typeParam } are substituted by { @code typeArg } . For example it can be used to construct { @code Map<K V > } for any { @code K } and { @code V } type :", "code": "public final < X > TypeToken < T > where ( TypeParameter < X > typeParam , TypeToken < X > typeArg ) { TypeResolver resolver = new TypeResolver ( ) . where ( ImmutableMap . of ( new TypeResolver . TypeVariableKey ( typeParam . typeVariable ) , typeArg . runtimeType ) ) ; // If there's any type error, we'd report now rather than later. return new SimpleTypeToken < T > ( resolver . resolveType ( runtimeType ) ) ; }", "code_fid": 455317, "source_code": "public final <X> TypeToken<T> where(TypeParameter<X> typeParam, TypeToken<X> typeArg) {\n    TypeResolver resolver =\n        new TypeResolver()\n            .where(\n                ImmutableMap.of(\n                    new TypeResolver.TypeVariableKey(typeParam.typeVariable), typeArg.runtimeType));\n    // If there's any type error, we'd report now rather than later.\n    return new SimpleTypeToken<T>(resolver.resolveType(runtimeType));\n  }"}, {"fid": 93, "label": "0", "url": "https://github.com/conveyal/gtfs-lib/blob/ba9e19563af9f52d4eb0eac60327d9f39ebd19f7/src/main/java/com/conveyal/gtfs/loader/JdbcTableWriter.java#L719-L769", "function_name": "JdbcTableWriter.updateStopTimesForPatternStop", "nl": "Normalizes all stop times arrivals and departures for an ordered set of pattern stops . This set can be the full set of stops for a pattern or just a subset . Typical usage for this method would be to overwrite the arrival and departure times for existing trips after a pattern stop has been added or inserted into a pattern or if a pattern stop s default travel or dwell time were updated and the stop times need to reflect this update . @param patternStops list of pattern stops for which to update stop times ( ordered by increasing stop_sequence ) @throws SQLException", "code": "private int updateStopTimesForPatternStop ( ObjectNode patternStop , int previousTravelTime ) throws SQLException { String sql = String . format ( \"update %s.stop_times st set arrival_time = ?, departure_time = ? from %s.trips t \" + \"where st.trip_id = t.trip_id AND t.pattern_id = ? AND st.stop_sequence = ?\" , tablePrefix , tablePrefix ) ; // Prepare the statement and set statement parameters PreparedStatement statement = connection . prepareStatement ( sql ) ; int oneBasedIndex = 1 ; int travelTime = patternStop . get ( \"default_travel_time\" ) . asInt ( ) ; int arrivalTime = previousTravelTime + travelTime ; statement . setInt ( oneBasedIndex ++ , arrivalTime ) ; int dwellTime = patternStop . get ( \"default_dwell_time\" ) . asInt ( ) ; statement . setInt ( oneBasedIndex ++ , arrivalTime + dwellTime ) ; // Set \"where clause\" with value for pattern_id and stop_sequence statement . setString ( oneBasedIndex ++ , patternStop . get ( \"pattern_id\" ) . asText ( ) ) ; // In the editor, we can depend on stop_times#stop_sequence matching pattern_stops#stop_sequence because we // normalize stop sequence values for stop times during snapshotting for the editor. statement . setInt ( oneBasedIndex ++ , patternStop . get ( \"stop_sequence\" ) . asInt ( ) ) ; // Log query, execute statement, and log result. LOG . debug ( statement . toString ( ) ) ; int entitiesUpdated = statement . executeUpdate ( ) ; LOG . debug ( \"{} stop_time arrivals/departures updated\" , entitiesUpdated ) ; return travelTime + dwellTime ; }", "code_fid": 462353, "source_code": "private int updateStopTimesForPatternStop(ObjectNode patternStop, int previousTravelTime) throws SQLException {\n        String sql = String.format(\n            \"update %s.stop_times st set arrival_time = ?, departure_time = ? from %s.trips t \" +\n                \"where st.trip_id = t.trip_id AND t.pattern_id = ? AND st.stop_sequence = ?\",\n            tablePrefix,\n            tablePrefix\n        );\n        // Prepare the statement and set statement parameters\n        PreparedStatement statement = connection.prepareStatement(sql);\n        int oneBasedIndex = 1;\n        int travelTime = patternStop.get(\"default_travel_time\").asInt();\n        int arrivalTime = previousTravelTime + travelTime;\n        statement.setInt(oneBasedIndex++, arrivalTime);\n        int dwellTime = patternStop.get(\"default_dwell_time\").asInt();\n        statement.setInt(oneBasedIndex++, arrivalTime + dwellTime);\n        // Set \"where clause\" with value for pattern_id and stop_sequence\n        statement.setString(oneBasedIndex++, patternStop.get(\"pattern_id\").asText());\n        // In the editor, we can depend on stop_times#stop_sequence matching pattern_stops#stop_sequence because we\n        // normalize stop sequence values for stop times during snapshotting for the editor.\n        statement.setInt(oneBasedIndex++, patternStop.get(\"stop_sequence\").asInt());\n        // Log query, execute statement, and log result.\n        LOG.debug(statement.toString());\n        int entitiesUpdated = statement.executeUpdate();\n        LOG.debug(\"{} stop_time arrivals/departures updated\", entitiesUpdated);\n        return travelTime + dwellTime;\n    }"}, {"fid": 94, "label": "1", "url": "https://github.com/lingochamp/FileDownloader/blob/53bca84d573505ff78899c4aa2056c3d40384c1b/library/src/main/java/com/liulishuo/filedownloader/notification/FileDownloadNotificationListener.java#L71-L83", "function_name": "FileDownloadNotificationListener.destroyNotification", "nl": "The notification item with the { @code task } is told to destroy .", "code": "public void destroyNotification ( BaseDownloadTask task ) { if ( disableNotification ( task ) ) { return ; } this . helper . showIndeterminate ( task . getId ( ) , task . getStatus ( ) ) ; final BaseNotificationItem n = this . helper . remove ( task . getId ( ) ) ; if ( ! interceptCancel ( task , n ) && n != null ) { n . cancel ( ) ; } }", "code_fid": 456509, "source_code": "public void destroyNotification(BaseDownloadTask task) {\n        if (disableNotification(task)) {\n            return;\n        }\n\n        this.helper.showIndeterminate(task.getId(), task.getStatus());\n\n        final BaseNotificationItem n = this.helper.\n                remove(task.getId());\n        if (!interceptCancel(task, n) && n != null) {\n            n.cancel();\n        }\n    }"}, {"fid": 95, "label": "1", "url": "https://github.com/deib-polimi/SPF2/blob/c5a856ab29116a671fe9bef7035f3efb605dc2a1/sPFApp/src/main/java/it/polimi/spf/app/fragments/profile/ProfileFragment.java#L262-L302", "function_name": "ProfileFragment.onCreateLoader", "nl": "/ * LOADERS - Used to load and save profile data .", "code": "@ Override public Loader < ProfileFieldContainer > onCreateLoader ( int id , Bundle args ) { switch ( id ) { case LoadersConfig . LOAD_PROFILE_LOADER_ID : return new AsyncTaskLoader < ProfileFieldContainer > ( getActivity ( ) ) { @ Override public ProfileFieldContainer loadInBackground ( ) { if ( mMode == Mode . SELF || mMode == Mode . EDIT ) { return SPF . get ( ) . getProfileManager ( ) . getProfileFieldBulk ( mCurrentPersona , ProfilePagerAdapter . DEFAULT_FIELDS ) ; } else { SPFRemoteInstance instance = SPF . get ( ) . getPeopleManager ( ) . getPerson ( mPersonIdentifier ) ; if ( instance == null ) { throw new IllegalStateException ( \"Person \" + mPersonIdentifier + \" not found in proximity\" ) ; } else { String app = getActivity ( ) . getCallingPackage ( ) ; app = app == null ? \"it.polimi.spf.app\" : app ; return instance . getProfileBulk ( ProfileField . toIdentifierList ( ProfilePagerAdapter . DEFAULT_FIELDS ) , app ) ; } } } } ; case LoadersConfig . SAVE_PROFILE_LOADER_ID : if ( mMode != Mode . EDIT ) { Log . e ( TAG , \"SAVE_PROFILE_LOADER initialized in mode \" + mMode ) ; } return new AsyncTaskLoader < ProfileFieldContainer > ( getActivity ( ) ) { @ Override public ProfileFieldContainer loadInBackground ( ) { SPF . get ( ) . getProfileManager ( ) . setProfileFieldBulk ( mContainer , mCurrentPersona ) ; return null ; } } ; default : throw new IllegalArgumentException ( \"No loader for id \" + id ) ; } }", "code_fid": 466722, "source_code": "@Override\n    public Loader<ProfileFieldContainer> onCreateLoader(int id, Bundle args) {\n        switch (id) {\n            case LoadersConfig.LOAD_PROFILE_LOADER_ID:\n                return new AsyncTaskLoader<ProfileFieldContainer>(getActivity()) {\n\n                    @Override\n                    public ProfileFieldContainer loadInBackground() {\n                        if (mMode == Mode.SELF || mMode == Mode.EDIT) {\n                            return SPF.get().getProfileManager().getProfileFieldBulk(mCurrentPersona, ProfilePagerAdapter.DEFAULT_FIELDS);\n                        } else {\n                            SPFRemoteInstance instance = SPF.get().getPeopleManager().getPerson(mPersonIdentifier);\n                            if (instance == null) {\n                                throw new IllegalStateException(\"Person \" + mPersonIdentifier + \" not found in proximity\");\n                            } else {\n                                String app = getActivity().getCallingPackage();\n                                app = app == null ? \"it.polimi.spf.app\" : app;\n                                return instance.getProfileBulk(ProfileField.toIdentifierList(ProfilePagerAdapter.DEFAULT_FIELDS), app);\n                            }\n                        }\n                    }\n                };\n\n            case LoadersConfig.SAVE_PROFILE_LOADER_ID:\n                if (mMode != Mode.EDIT) {\n                    Log.e(TAG, \"SAVE_PROFILE_LOADER initialized in mode \" + mMode);\n                }\n\n                return new AsyncTaskLoader<ProfileFieldContainer>(getActivity()) {\n\n                    @Override\n                    public ProfileFieldContainer loadInBackground() {\n                        SPF.get().getProfileManager().setProfileFieldBulk(mContainer, mCurrentPersona);\n                        return null;\n                    }\n                };\n\n            default:\n                throw new IllegalArgumentException(\"No loader for id \" + id);\n        }\n    }"}, {"fid": 96, "label": "0", "url": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/dao/impl/entity/NutEntity.java#L263-L276", "function_name": "NutEntity.checkCompositeFields", "nl": "\u589e\u52a0\u6620\u5c04\u5b57\u6bb5", "code": "public void checkCompositeFields ( String [ ] names ) { if ( ! Lang . isEmptyArray ( names ) && names . length > 1 ) { for ( String name : names ) { if ( byJava . containsKey ( name ) && byJava . get ( name ) . isCompositePk ( ) ) theComposites . add ( byJava . get ( name ) ) ; else throw Lang . makeThrow ( \"Fail to find comosite field '%s' in class '%s'!\" , name , type . getName ( ) ) ; } this . pkType = PkType . COMPOSITE ; } else if ( null != this . theId ) { this . pkType = PkType . ID ; } else if ( null != this . theName ) { this . pkType = PkType . NAME ; } }", "code_fid": 458073, "source_code": "public void checkCompositeFields(String[] names) {\n        if (!Lang.isEmptyArray(names) && names.length > 1) {\n            for (String name : names) {\n                if (byJava.containsKey(name) && byJava.get(name).isCompositePk())\n                    theComposites.add(byJava.get(name));\n                else\n                    throw Lang.makeThrow(\"Fail to find comosite field '%s' in class '%s'!\",\n                                         name,\n                                         type.getName());\n            }\n            this.pkType = PkType.COMPOSITE;\n        } else if (null != this.theId) {\n            this.pkType = PkType.ID;\n        } else if (null != this.theName) {\n            this.pkType = PkType.NAME;\n        }\n    }"}, {"fid": 97, "label": "1", "url": "https://github.com/deib-polimi/SPF2/blob/c5a856ab29116a671fe9bef7035f3efb605dc2a1/sPFFramework/src/main/java/it/polimi/spf/framework/notification/SPFNotificationManager.java#L243-L248", "function_name": "SPFNotificationManager.setup", "nl": "to be called after on start : initializes the triggers logic", "code": "private void setup ( ) { List < SPFTrigger > triggers = mTriggerTable . getAllTriggers ( ) ; mTriggerCache = new SPFActionCache ( mContext ) ; mTriggerEngine . refreshTriggers ( triggers ) ; mTriggerCache . refresh ( triggers ) ; }", "code_fid": 466746, "source_code": "private void setup() {\n        List<SPFTrigger> triggers = mTriggerTable.getAllTriggers();\n        mTriggerCache = new SPFActionCache(mContext);\n        mTriggerEngine.refreshTriggers(triggers);\n        mTriggerCache.refresh(triggers);\n    }"}, {"fid": 98, "label": "1", "url": "https://github.com/fcrepo4-exts/fcrepo-mint/blob/be76a71631609dd6430c5d762dec6ab6e8a38306/src/main/java/org/fcrepo/mint/HttpPidMinter.java#L118-L128", "function_name": "HttpPidMinter.buildClient", "nl": "Setup authentication in httpclient .", "code": "protected HttpClient buildClient ( ) { HttpClientBuilder builder = HttpClientBuilder . create ( ) . useSystemProperties ( ) . setConnectionManager ( connManager ) ; if ( ! isBlank ( username ) && ! isBlank ( password ) ) { final URI uri = URI . create ( url ) ; final CredentialsProvider credsProvider = new BasicCredentialsProvider ( ) ; credsProvider . setCredentials ( new AuthScope ( uri . getHost ( ) , uri . getPort ( ) ) , new UsernamePasswordCredentials ( username , password ) ) ; builder = builder . setDefaultCredentialsProvider ( credsProvider ) ; } return builder . build ( ) ; }", "code_fid": 469745, "source_code": "protected HttpClient buildClient() {\n        HttpClientBuilder builder = HttpClientBuilder.create().useSystemProperties().setConnectionManager(connManager);\n        if (!isBlank(username) && !isBlank(password)) {\n            final URI uri = URI.create(url);\n            final CredentialsProvider credsProvider = new BasicCredentialsProvider();\n            credsProvider.setCredentials(new AuthScope(uri.getHost(), uri.getPort()),\n                new UsernamePasswordCredentials(username, password));\n            builder = builder.setDefaultCredentialsProvider(credsProvider);\n        }\n        return builder.build();\n    }"}, {"fid": 99, "label": "0", "url": "https://github.com/reactor/reactor-core/blob/df2eba4ab7d2393e1a942ce972c3307fbbd47ff9/reactor-core/src/main/java/reactor/util/concurrent/WaitStrategy.java#L151-L153", "function_name": "FluxFirstEmitting.ambAdditionalSource", "nl": "Block by parking in a loop", "code": "@ Nullable FluxFirstEmitting < T > ambAdditionalSource ( Publisher < ? extends T > source ) { if ( array != null ) { int n = array . length ; @ SuppressWarnings ( \"unchecked\" ) Publisher < ? extends T > [ ] newArray = new Publisher [ n + 1 ] ; System . arraycopy ( array , 0 , newArray , 0 , n ) ; newArray [ n ] = source ; return new FluxFirstEmitting <> ( newArray ) ; } return null ; }", "code_fid": 456259, "source_code": "@Nullable\n\tFluxFirstEmitting<T> ambAdditionalSource(Publisher<? extends T> source) {\n\t\tif (array != null) {\n\t\t\tint n = array.length;\n\t\t\t@SuppressWarnings(\"unchecked\") Publisher<? extends T>[] newArray =\n\t\t\t\t\tnew Publisher[n + 1];\n\t\t\tSystem.arraycopy(array, 0, newArray, 0, n);\n\t\t\tnewArray[n] = source;\n\n\t\t\treturn new FluxFirstEmitting<>(newArray);\n\t\t}\n\t\treturn null;\n\t}"}]